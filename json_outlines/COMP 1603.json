{
  "Campus and Faculty": "FST, STA",
  "Department": "DCIT",
  "Course Code & title": "COMP 1603 Computer Programming III",
  "Semester and Level": "Semester 2  Level 1",
  "Pre-requisites": "None",
  "Co-requisites": "",
  "Anti-requisites": "",
  "Course Type": "Core",
  "Credits": "3",
  "Projected Enrolment": "",
  "Project Start Date": "",
  "Mode of Delivery": "Face-to-Face ☐     Blended ☑     Online ☐",
  "Course Description": "This course uses an appropriate programming language as a tool to teach intermediate programming concepts. The main concepts covered are pointers, linked lists, stacks, queues, sets. and maps and their implementations using arrays and linked lists and recursion.",
  "Rationale": "This course introduces intermediate programming concepts and abstract data types. It focuses on the use of common abstract data types such as linked lists, stacks, queues, sets, and maps which are important concepts that are inherent in most systems. It introduces the concept of dynamic storage methods which are necessary in programming easily adaptive systems. It also covers the conditions under which dynamic storage is applicable and when it is not.",
  "Course Aims": "This course aims to introduce students to pointers and abstract data types.This course teaches students the foundations of working with dynamic allocations, interfaces, and re-use of code. Mastery of these essential topics in Computer Science allows students to design and implement memory-efficient data types and solutions when meeting the needs of a specific problem.",
  "Course Learning Outcomes": [
    "On successful completion of this course, students will be able to:",
    "Choose the appropriate data structure for modeling a given problem.",
    "Design and use the following data structures: arrays, records/structs, strings, linked lists, stacks, queues, sets, and maps to model real world objects and concepts.",
    "Write programs that use each of the following data structures: arrays, records/structs, strings, linked lists, stacks, queues, sets, and maps.",
    "Compare alternative implementations of data structures with respect to performance.",
    "Explain what a pointer is and how it can be used.",
    "Describe how references allow for objects to be accessed in multiple ways.",
    "Compare and contrast the costs and benefits of dynamic and static data structure implementations.",
    "Identify common coding errors that lead to insecure programs (e.g., buffer overflows, memory leaks, malicious code) and apply strategies for avoiding such errors.",
    "Conduct a personal code review (focused on common coding errors) on a program component using a provided checklist.",
    "Use recursion as a powerful technique in problem solving.",
    "Identify the base case and the general case of a recursively-defined problem.",
    "Apply a variety of strategies to the testing and debugging of simple programs.",
    "1. Records/structs (heterogeneous aggregates)\r\n1.1. Declaration \r\n1.2. User Defined Types \r\n1.3. Array of Structures \r\n1.4. Nested Structures \r\n2. Pointers \r\n2.1. Concept of a pointer \r\n2.2. Pointers as arguments \r\n2.3. Pointer arithmetic \r\n3. Linked Lists \r\n3.1. Operations on a Linked List (inserting, deleting, counting, searching) \r\n3.2. Allocating Memory (e.g., sizeof, malloc, calloc, and free in C) \r\n3.3. Sorted Lists \r\n3.4. Merging \r\n4. Abstract data types and their implementation\r\n4.1. Stacks (Array and Linked List Implementation) \r\n4.1.1. Creating a Stack Header File \r\n4.1.2. How to convert from infix to postfix \r\n4.2. Queues (Array and Linked List Implementation) \r\n4.3. Priority queues (Array and Linked List Implementation) \r\n4.4. Sets\r\n4.5. Maps\r\n5. Recursion\r\n5.1. The concept of recursion \r\n5.2. Recursive functions \r\n5.3. Recursive applications"
  ],
  "Course Content": "",
  "Teaching Methods": [
    {
      "Name": "Online Activities (myElearning)",
      "Description": "Quizzes"
    },
    {
      "Name": "Laboratory Work",
      "Description": ""
    },
    {
      "Name": "Flipped Classroom",
      "Description": "Readings from text book. \r\nVideo lectueres by the author of the essential textbook"
    },
    {
      "Name": "Inquiry-based Learning",
      "Description": "Interactive tutorial sessions - students solve problems on the board"
    },
    {
      "Name": "Problem-based Learning",
      "Description": "Apply programming concepts to write space-efficient programs for real world problems"
    },
    {
      "Name": "Groupwork",
      "Description": ""
    },
    {
      "Name": "",
      "Description": ""
    }
  ],
  "Contact and Credit hours": [
    {
      "Type": "",
      "Duration": "",
      "Contact Hours": "",
      "Credit Hours": ""
    },
    {
      "Type": "",
      "Duration": "",
      "Contact Hours": "",
      "Credit Hours": ""
    },
    {
      "Type": "",
      "Duration": "",
      "Contact Hours": "",
      "Credit Hours": ""
    }
  ],
  "Course Assessments Description": "",
  "Matrix": [
    {
      "Assessment": "Assignment 2",
      "Learning Outcomes": "1, 2, 3, 5, 6, 7, 9, 12",
      "Assessment Description": "Take home programming problems",
      "Weighting %": "6",
      "Duration": "10-14 days"
    },
    {
      "Assessment": "Assignment 3 ",
      "Learning Outcomes": "1, 2, 3, 4, 7, 8, 9, 12",
      "Assessment Description": "Take home programming problems",
      "Weighting %": "6",
      "Duration": "10-14 days"
    },
    {
      "Assessment": "Quiz 1 ",
      "Learning Outcomes": "",
      "Assessment Description": "Online quiz, MCQ",
      "Weighting %": "1",
      "Duration": "15-30 min"
    },
    {
      "Assessment": "Quiz 2",
      "Learning Outcomes": "1, 2, 3, 4, 5, 6, 7, 8",
      "Assessment Description": "Online quiz, MCQ",
      "Weighting %": "1",
      "Duration": "15-30 min"
    },
    {
      "Assessment": "Quiz 3",
      "Learning Outcomes": "1, 2, 3, 4, 5, 6, 7, 8, 10",
      "Assessment Description": "Online quiz, MCQ",
      "Weighting %": "1",
      "Duration": "15-30 min"
    },
    {
      "Assessment": "Coursework Exam 1",
      "Learning Outcomes": "1, 2, 3, 4, 5, 6, 7",
      "Assessment Description": "Problems & short answer questions",
      "Weighting %": "10",
      "Duration": "1.5 hours"
    },
    {
      "Assessment": "Coursework Exam 2",
      "Learning Outcomes": "1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11",
      "Assessment Description": "Problems & short answer questions",
      "Weighting %": "20",
      "Duration": "1.5 hours"
    },
    {
      "Assessment": "Final Examination",
      "Learning Outcomes": "1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11",
      "Assessment Description": "Problems & short answer questions",
      "Weighting %": "50",
      "Duration": "2 hours"
    },
    {
      "Assessment": "",
      "Learning Outcomes": "",
      "Assessment Description": "",
      "Weighting %": "",
      "Duration": ""
    }
  ],
  "Learning Resources": [
    "Robert Sedgewick. Algorithms. 1983. Addison-Wesley.",
    "",
    "Recommended"
  ],
  "Staffing Requirements": "",
  "Additional Cost": "",
  "Collaboration": "",
  "Course Coordinator": "",
  "Course Calendar": [
    {
      "Week": "2",
      "Topics": "Pointers 2.1, 2.2",
      "Required Readings": "C Programming - An Advanced Course, Chapter 3",
      "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
      "Assessment": "Assignment 1",
      "Date": "Week 2"
    },
    {
      "Week": "3",
      "Topics": "Pointers 2.2, 2.3",
      "Required Readings": "C Programming - An Advanced Course, Chapter 3",
      "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
      "Assessment": "X",
      "Date": ""
    },
    {
      "Week": "4",
      "Topics": "Linked List 3.1, 3.2",
      "Required Readings": "C Programming - An Advanced Course, Chapter 4",
      "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
      "Assessment": "Quiz 1",
      "Date": "Week 4"
    },
    {
      "Week": "5",
      "Topics": "Linked List 3.3, 3.4",
      "Required Readings": "C Programming - An Advanced Course, Chapter 4",
      "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
      "Assessment": "Assignment 2",
      "Date": "Week 5"
    },
    {
      "Week": "6",
      "Topics": "Stacks 4.1",
      "Required Readings": "C Programming - An Advanced Course, Chapter 5",
      "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
      "Assessment": "X",
      "Date": ""
    },
    {
      "Week": "7",
      "Topics": "Stacks 4.1, Queues 4.2",
      "Required Readings": "C Programming - An Advanced Course, Chapter 5, Robert Sedgewick. Algorithms, Chapter 11",
      "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
      "Assessment": "X",
      "Date": ""
    },
    {
      "Week": "8",
      "Topics": "Queues 4.2,  Priority queues 4.3",
      "Required Readings": "Robert Sedgewick. Algorithms, Chapter 11",
      "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
      "Assessment": "Coursework Exam 1",
      "Date": "Week 8"
    },
    {
      "Week": "9",
      "Topics": "Priority queues 4.3, Sets 4.4",
      "Required Readings": "Robert Sedgewick. Algorithms, Chapter 11, Chapter 30 pgs 308 - 405",
      "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
      "Assessment": "Quiz 2",
      "Date": "Week 9"
    },
    {
      "Week": "10",
      "Topics": "Sets 4.4, Maps 4.5",
      "Required Readings": "Robert Sedgewick. Algorithms, Chapter 30 pgs 308 - 405",
      "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
      "Assessment": "Assignment 3",
      "Date": "Week 10"
    },
    {
      "Week": "11",
      "Topics": "Recursion 5.1, 5.2",
      "Required Readings": "C Programming - An Advanced Course, Chapter 6",
      "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
      "Assessment": "Quiz 3",
      "Date": "Week 11"
    },
    {
      "Week": "12",
      "Topics": "Recursion 5.3",
      "Required Readings": "C Programming - An Advanced Course, Chapter 6",
      "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
      "Assessment": "Coursework Exam 2",
      "Date": "Week 12"
    },
    {
      "Week": "13",
      "Topics": "Course Review\r\n (No introduction of new subject matter)",
      "Required Readings": "",
      "Learning Activities": "",
      "Assessment": "X",
      "Date": ""
    },
    {
      "Week": "",
      "Topics": "",
      "Required Readings": "",
      "Learning Activities": "",
      "Assessment": "",
      "Date": ""
    }
  ]
}