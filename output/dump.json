[
  {
    "name": "Akhenaton Daaga",
    "courses": {
      "COMP 1604": []
    },
    "email": "akhenaton.daaga@sta.uwi.edu"
  },
  {
    "name": "Cynthia Cudjoe",
    "courses": {
      "INFO 2605": [],
      "COMP 1600": [
        "AR-01-01 - Overview and history of computer architecture",
        "AR-02-01 - Bits, bytes, and words",
        "AR-02-02 - Numeric data representation and number bases",
        "AR-02-03 - Fixed- and floating-point systems",
        "AR-02-04 - Signed and twos-complement representations",
        "AR-02-05 - Representation of non-numeric data (character codes, graphical data)",
        "AR-02-06 - Representation of records and arrays",
        "AR-03-01 - Basic organization of the von Neumann machine",
        "AR-03-02 - Control unit; instruction fetch, decode, and execution",
        "AR-03-03 - Instruction sets and types (data manipulation, control, I/O)",
        "AR-03-04 - Assembly/machine language programming",
        "AR-03-11 - Introduction to SIMD vs. MIMD and the Flynn Taxonomy",
        "AR-04-01 - Storage systems and their technology",
        "AR-04-02 - Memory hierarchy: importance of temporal and spatial locality",
        "AR-04-03 - Main memory organization and operations"
      ],
      "COMP 3604": [],
      "COMP 3603": [
        "HCI-01-01 - Contexts for HCI (anything with a user interface, e.g.,webpage, business applications, mobile applications, ",
        "HCI-01-02 - Processes for user-centered development, e.g., early focus on users, empirical testing, iterative design",
        "HCI-01-03 - Different measures for evaluation, e.g.,utility, efficiency, learnability, user satisfaction",
        "HCI-01-04 - Usability heuristics and the principles of usability testing",
        "HCI-01-05 - Physical capabilities that inform interaction design, e.g.,color perception, ergonomics",
        "HCI-01-06 - Cognitive models that inform interaction design, e.g.,attention, perception and recognition, movement, and ",
        "HCI-01-07 - Social models that inform interaction design, e.g.,culture, communication, networks and organizations",
        "HCI-01-08 - Principles of good design and good designers; engineering tradeoffs",
        "HCI-01-09 - Accessibility, e.g.,interfaces for differently-abled populations (e.g.,blind, motion-impaired)",
        "HCI-01-10 - Interfaces for differently-aged population groups (e.g., children, 80+)",
        "HCI-02-01 - Principles of graphical user interfaces (GUIs)",
        "HCI-02-02 - Elements of visual design (layout, color, fonts, labeling)",
        "HCI-02-03 - Task analysis, including qualitative aspects of generating task analytic models",
        "HCI-02-04 - Low-fidelity (paper) prototyping",
        "HCI-02-07 - Handling human/system failure",
        "HCI-03-01 - Software Architecture Patterns, e.g., Model-View controller; command objects, online, offline (cross  ",
        "HCI-03-02 - Interaction Design Patterns: visual hierarchy, navigational distance",
        "HCI-04-01 - Approaches to, and characteristics of, the design process",
        "HCI-04-02 - Functionality and usability requirements (cross-reference to SE/Requirements Engineering)",
        "HCI-04-03 - Techniques for gathering requirements, e.g.,interviews, surveys, ethnographic and contextual enquiry",
        "HCI-04-04 - Techniques and tools for the analysis and presentation of requirements, e.g.,reports, personas",
        "HCI-04-05 - Prototyping techniques and tools, e.g.,sketching, storyboards, low-fidelity prototyping, wireframes ",
        "HCI-04-06 - Evaluation without users, using both qualitative and quantitative techniques, e.g.,walkthroughs, GOMS, ",
        "HCI-04-07 - Evaluation with users, e.g.,observation, think-aloud, interview, survey, experiment"
      ]
    },
    "email": "cynthia.cudjoe@sta.uwi.edu"
  },
  {
    "email": "diana.ragbir@sta.uwi.edu",
    "name": "Diana Ragbir",
    "courses": {
      "COMP 2604": [
        "OS-01-01 - Role and purpose of the operating system",
        "OS-01-02 - Functionality of a typical operating system",
        "OS-01-03 - Mechanisms to support client-server models, hand-held devices",
        "OS-01-04 - Design issues (efficiency, robustness, flexibility, portability, security, compatibility)",
        "OS-01-05 - Influences of security,networking, multimedia, windowing systems",
        "OS-02-01 - Structuring methods (monolithic, layered, modular, micro-kernel models)",
        "OS-02-02 - Abstractions, processes, and resources",
        "OS-02-03 - Concepts of application program interfaces (APIs)",
        "OS-02-04 - The evolution of hardware/software techniquesand application needs",
        "OS-02-05 - Device organization",
        "OS-02-06 - Interrupts: methods and implementations",
        "OS-02-07 - Concept of user/system state and protection, transition to kernel mode",
        "OS-03-02 - Structures (ready list, process control blocks, and so forth)",
        "OS-03-03 - Dispatching and context switching",
        "OS-03-04 - The role of interrupts",
        "OS-03-05 - Managing atomic access to OS objects",
        "OS-03-06 - Implementing synchronization primitives",
        "OS-03-07 - Multiprocessor issues (spin-locks, reentrancy) (cross-reference SF/Parallelism)",
        "OS-04-01 - Preemptive and non-preemptive scheduling (cross-reference SF/Resource Allocation and Scheduling, ",
        "OS-04-02 - Schedulers and policies (cross-reference SF/Resource Allocation and Scheduling, PD/Parallel ",
        "OS-04-03 - Processes and threads (cross-reference SF/ C omputational paradigms)",
        "OS-04-04 - Deadlines and real-time issues",
        "OS-05-01 - Review of physical memory and memory management hardware",
        "OS-05-02 - Working sets and thrashing",
        "OS-05-03 - Caching(cross-reference AR/Memory System Organization and Architecture)",
        "OS-06-01 - Overview of system security",
        "OS-06-02 - Policy/mechanism separation",
        "OS-06-03 - Security methods and devices",
        "OS-06-04 - Protection, access control, and authentication",
        "OS-07-01 - Types of virtualization (including Hardware/Software, OS, Server, Service, Network) ",
        "OS-07-02 - Paging and virtual memory",
        "OS-07-03 - Virtual file systems",
        "OS-07-04 - Hypervisors ",
        "OS-08-01 - Characteristics of serial and parallel devices",
        "OS-08-02 - Abstracting device differences",
        "OS-08-03 - Buffering strategies",
        "OS-08-04 - Direct memory access",
        "OS-08-05 - Recovery from failures",
        "OS-09-01 - Files: data, metadata, operations, organization, buffering, sequential, nonsequential",
        "OS-09-02 - Directories: contents and structure",
        "OS-09-03 - File systems: partitioning, mount/unmount, virtual file systems",
        "OS-09-04 - Standard implementation techniques",
        "OS-09-05 - Memory-mapped files",
        "OS-09-06 - Special-purpose file systems",
        "OS-09-07 - Naming, searching, access, backups",
        "OS-10-01 - Process and task scheduling",
        "SF-06-02 - Kinds of scheduling (e.g., first-come, priority) ",
        "SF-06-03 - Advantages of fair scheduling, preemptive scheduling"
      ],
      "COMP 2601": [
        "AR-01-02 - Combinational vs. sequential logic/Field programmable gate arrays as a fundamental combinational + ",
        "AR-01-03 - Multiple representations/layers of interpretation (hardware is just another layer)",
        "AR-02-01 - Bits, bytes, and words",
        "AR-02-02 - Numeric data representation and number bases",
        "AR-02-03 - Fixed- and floating-point systems",
        "AR-02-04 - Signed and twos-complement representations",
        "AR-02-05 - Representation of non-numeric data (character codes, graphical data)",
        "AR-03-01 - Basic organization of the von Neumann machine",
        "AR-03-02 - Control unit; instruction fetch, decode, and execution",
        "AR-03-03 - Instruction sets and types (data manipulation, control, I/O)",
        "AR-03-04 - Assembly/machine language programming",
        "AR-03-05 - Instruction formats",
        "AR-03-06 - Addressing modes",
        "AR-03-07 - Subroutine call and return mechanisms (cross-referencePL/Language Translation and Execution)",
        "AR-03-08 - I/O and interrupts",
        "AR-03-09 - Heap vs. Static vs. Stack vs. Code segments",
        "AR-03-10 - Shared memory multiprocessors/multicore organization",
        "AR-03-11 - Introduction to SIMD vs. MIMD and the Flynn Taxonomy",
        "AR-04-01 - Storage systems and their technology",
        "AR-04-02 - Memory hierarchy: importance of temporal and spatial locality",
        "AR-04-03 - Main memory organization and operations",
        "AR-04-04 - Latency, cycle time, bandwidth, and interleaving",
        "AR-04-05 - Cache memories (address mapping, block size, replacement and store policy)",
        "AR-04-06 - Multiprocessor cache consistency/Using the memory system for inter-core synchronization/atomic memory ",
        "AR-04-07 - Virtual memory (page table, TLB)",
        "AR-04-08 - Fault handling and reliability",
        "AR-04-09 - Error coding, data compression, and data integrity (cross-referenceSF/Reliability through Redundancy)",
        "AR-05-01 - I/O fundamentals: handshaking, buffering, programmed I/O, interrupt-driven I/O",
        "AR-05-02 - Interrupt structures: vectoredand prioritized, interrupt acknowledgment",
        "AR-05-03 - External storage, physical organization, and drives",
        "AR-05-04 - Buses: bus protocols, arbitration, direct-memory access (DMA)",
        "AR-05-07 - RAID architectures",
        "AR-06-01 - Implementation of simple datapaths, including instruction pipelining, hazard detection and resolution",
        "AR-06-02 - Control unit: hardwired realization vs. microprogrammed realization",
        "AR-06-03 - Instruction pipelining",
        "AR-06-04 - Introduction to instruction-level parallelism (ILP)",
        "AR-07-01 - Power Law",
        "AR-07-02 - Example SIMD and MIMD instruction sets and architectures",
        "AR-07-04 - Shared multiprocessor memory systems and memory consistency",
        "AR-07-05 - Multiprocessor cache coherence",
        "OS-05-01 - Review of physical memory and memory management hardware",
        "OS-05-03 - Caching(cross-reference AR/Memory System Organization and Architecture)",
        "PD-05-03 - Symmetric multiprocessing (SMP)",
        "PD-05-04 - SIMD, vector processing ",
        "PD-05-05 - GPU, co-processing",
        "PD-05-06 - Flynn’s taxonomy",
        "SF-05-01 - Performance figures of merit",
        "SF-05-02 - Workloadsand representative benchmarks, and methods of collecting and analyzing performance figures of ",
        "SF-05-03 - CPI (Cycles per Instruction) equationas tool for understanding tradeoffs in the design of instruction sets, ",
        "SF-05-04 - Amdahl’s Law: the part of the computation that cannot be sped up limits the effect of the parts that can"
      ]
    }
  },
  {
    "email": "duc.kieu@sta.uwi.edu",
    "courses": {
      "COMP 3605": [
        "IM-10-01 - Usesof data mining",
        "IM-10-02 - Data mining algorithms",
        "IM-10-03 - Associative and sequential patterns",
        "IM-10-04 - Data clustering",
        "IM-10-05 - Market basket analysis",
        "IM-10-06 - Data cleaning",
        "IS-04-03 - Simple statistical-based learning, such as Naive Bayesian Classifier, decision trees",
        "IS-04-04 - The over-fitting problem",
        "IS-04-05 - Measuring classifier accuracy"
      ],
      "COMP 3601": [
        "AL-01-01 - Differences among best, expected, and worst case behaviors of an algorithm ",
        "AL-01-02 - Asymptotic analysis of upper and expected complexity bounds",
        "AL-01-03 - Big O  notation: formal definition",
        "AL-01-04 - Complexity classes, such as constant, logarithmic, linear, quadratic, and exponential",
        "AL-01-05 - Empirical measurements of performance",
        "AL-01-06 - Time and space trade-offs in algorithms",
        "AL-01-07 - Big O notation: use",
        "AL-01-08 - Little o, big omega and big theta notation",
        "AL-01-09 - Recurrence relations",
        "AL-01-10 - Analysis of iterative and recursive algorithms",
        "AL-01-11 - Some version of a Master Theorem",
        "AL-02-01 - Brute-force algorithms",
        "AL-02-02 - Greedy algorithms",
        "AL-02-03 - Divide-and-conquer (cross-reference SDF/Algorithms and Design/Problem-solving strategies)",
        "AL-02-04 - Recursive backtracking",
        "AL-02-05 - Dynamic Programming",
        "AL-02-06 - Branch-and-bound",
        "AL-02-08 - Reduction: transform-and-conquer",
        "AL-03-01 - Simple numerical algorithms, such as computing the average of a list of numbers, finding the min, max, ",
        "AL-03-02 - Sequential and binary search algorithms",
        "AL-03-03 - Worst case quadratic sorting algorithms (selection, insertion)",
        "AL-03-04 - Worst or average case O(N log N) sorting algorithms (quicksort, heapsort, mergesort)",
        "AL-03-07 - Graphs and graph algorithms",
        "AL-03-08 - Heaps",
        "AL-03-10 - Pattern matching and string/text algorithms (e.g., substring matching, regular expression matching, longest ",
        "AL-07-06 - Linear Programming (e.g.,duality, simplex method, interior point algorithms)"
      ]
    },
    "name": "Duc The Kieu"
  },
  {
    "name": "Koffka Khan",
    "email": "koffka.khan@sta.uwi.edu",
    "courses": {
      "COMP 2605": [
        "IM-01-02 - Basic information storage and retrieval(IS&R) concepts",
        "IM-01-03 - Information capture and representation",
        "IM-02-01 - Approaches to and evolution of database systems",
        "IM-02-02 - Components of database systems ",
        "IM-02-03 - Design of core DBMS functions (e.g., query mechanisms, transaction management, buffer management, ",
        "IM-02-04 - Database architecture and data independence",
        "IM-02-05 - Use of a declarative query language",
        "IM-02-06 - Systems supporting structured and/or stream content",
        "IM-03-01 - Data modeling",
        "IM-03-02 - Conceptual models (e.g., entity-relationship, UML diagrams) ",
        "IM-03-04 - Relational data models",
        "IM-03-05 - Object-oriented models(cross-reference PL/Object-Oriented Programming)",
        "IM-03-06 - Semi-structured data model (expressed using DTD or XML Schema, for example)",
        "IM-04-01 - The impact of indices on query performance",
        "IM-04-02 - The basic structure of an index",
        "IM-04-03 - Keeping a buffer of data in memory",
        "IM-04-04 - Creating indexes with SQL",
        "IM-04-05 - Indexing text",
        "IM-05-01 - Mapping conceptual schema to a relational schema",
        "IM-05-02 - Entity and referential integrity",
        "IM-05-03 - Relational algebra and relational calculus",
        "IM-05-04 - Relational Database design",
        "IM-05-05 - Functional dependency",
        "IM-05-07 - Candidate keys, superkeys,and closure of a set of attributes",
        "IM-05-08 - Normal forms (BCNF)",
        "IM-06-01 - Overview of database languages",
        "IM-06-02 - SQL (data definition, query formulation, update sublanguage, constraints, integrity)",
        "IM-06-03 - Selections",
        "IM-06-04 - Projections",
        "IM-06-05 - Select-project-join",
        "IM-06-06 - Aggregates andgroup-by ",
        "IM-06-07 - Subqueries",
        "IM-06-10 - Introduction to other major query languages (e.g., XPATH, SPARQL)",
        "IM-06-11 - Stored procedures",
        "IM-07-01 - Transactions ",
        "IM-07-02 - Failure and recovery",
        "IM-07-03 - Concurrency control",
        "IM-09-01 - Storage and file structure",
        "IM-09-02 - Indexed files",
        "IM-09-03 - Hashed files",
        "IM-11-01 - Documents, electronic publishing, markup, and markup languages",
        "IM-11-15 - Metadata and cataloging",
        "IM-11-16 - Naming,repositories, archives"
      ],
      "INFO 3611": []
    }
  },
  {
    "email": "kris.manohar@sta.uwi.edu",
    "courses": {
      "COMP 3608": [
        "IS-01-01 - Overview of AI problems, examples of successful recent AI applications",
        "IS-01-02 - What is intelligent behavior? ",
        "IS-01-03 - Problem characteristics",
        "IS-01-04 - Nature of agents",
        "IS-01-05 - Philosophical and ethical issues. [elective]",
        "IS-02-01 - Problem spaces (states, goals and operators),  problem solving by search",
        "IS-02-02 - Factored representation (factoring state into variables)",
        "IS-02-03 - Uninformed search (breadth-first, depth-first, depth-first with iterative deepening)  ",
        "IS-02-04 - Heuristics and informed search (hill-climbing, generic best-first, A*)  ",
        "IS-02-05 - Space and time efficiency of search  ",
        "IS-02-07 - Constraint satisfaction (backtracking and local search methods) ",
        "IS-03-03 - Forward chaining, backward chaining",
        "IS-03-04 - Review of probabilistic reasoning, Bayes theorem (cross-reference with DS/Discrete Probability)",
        "IS-04-01 - Definition and examples of broad variety of machine learning tasks, including classification ",
        "IS-04-02 - Inductive learning",
        "IS-04-03 - Simple statistical-based learning, such as Naive Bayesian Classifier, decision trees",
        "IS-04-04 - The over-fitting problem",
        "IS-04-05 - Measuring classifier accuracy",
        "IS-05-03 - Implementation of A* search, beam search",
        "IS-07-01 - Review of basic probability (cross-reference DS/Discrete Probability)",
        "IS-07-02 - Random variables and probability distributions",
        "IS-07-03 - Conditional Independence",
        "IS-07-04 - Knowledge representations",
        "IS-10-01 - Definition and examples of broad variety of machine learning tasks",
        "IS-10-02 - General statistical-based learning, parameter estimation (maximum likelihood)",
        "IS-10-04 - Supervised learning  ",
        "IS-10-05 - Ensembles",
        "IS-10-06 - Nearest-neighbor algorithms",
        "IS-10-07 - Unsupervised Learning and clustering",
        "IS-10-08 - Semi-supervised learning",
        "IS-10-09 - Learning graphical models (Cross-reference IS/Reasoning under Uncertainty)  ",
        "IS-10-10 - Performance evaluation (such as cross-validation, area under ROC curve)",
        "IS-10-11 - Learning theory",
        "IS-10-12 - The problem of overfitting, the curse of dimensionality  ",
        "IS-10-13 - Reinforcement learning ",
        "IS-10-14 - Application of Machine Learning algorithms to Data Mining (cross-reference IM/Data Mining)"
      ],
      "COMP 3602": [
        "AL-04-01 - Finite-state machines",
        "AL-04-02 - Regular expressions",
        "AL-04-03 - The halting problem",
        "AL-04-04 - Context-free grammars (cross-reference PL/Syntax Analysis)",
        "AL-04-05 - Introduction to the P and NP classes and the P vs. NP problem",
        "AL-06-01 - Sets and languages",
        "AL-06-02 - Context-free languages",
        "AL-06-03 - Turing machines, or an equivalent formal model of universal computation",
        "AL-06-04 - Nondeterministic Turing machines",
        "AL-06-05 - Chomsky hierarchy",
        "AL-06-06 - The Church-Turing thesis",
        "AL-06-07 - Computability",
        "AL-06-09 - Examples of uncomputable functions",
        "AL-06-10 - Implications of uncomputability"
      ],
      "COMP 3611": [
        "CN-01-01 - Models as abstractions of situations",
        "CN-01-02 - Simulations as dynamic modeling",
        "CN-01-03 - Simulation techniques and tools, such as physical simulations, human-in-the-loop guided simulations, and ",
        "CN-01-04 - Foundational approaches to validating models(e.g., comparing a simulation’s output to real data or the ",
        "CN-01-05 - Presentation of results in a form relevant to the system being modeled",
        "CN-02-01 - Purpose of modeling and simulation including optimization; supporting decision making, forecasting, ",
        "CN-02-02 - Tradeoffs including performance, accuracy, validity, and complexity",
        "CN-02-03 - The simulation process; identification ofkey characteristics or behaviors, simplifying assumptions; ",
        "CN-02-04 - Model building: use of mathematical formulas or equations, graphs, constraints; methodologies and ",
        "CN-02-05 - Formal models and modeling techniques:  mathematical descriptions involving simplifying assumptions ",
        "CN-02-06 - Assessing and evaluating models and simulations in a variety of contexts; verification and validation of ",
        "CN-02-07 - Important application areas including health care and diagnostics, economics and finance, city and urban ",
        "CN-02-08 - Software in support of simulation and modeling; packages, languages",
        "DS-06-01 - Finite probability space, events",
        "DS-06-02 - Axioms of probability and probability measures",
        "DS-06-03 - Conditional probability, Bayes’ theorem",
        "DS-06-04 - Independence",
        "DS-06-05 - Integer random variables (Bernoulli, binomial)",
        "DS-06-07 - Variance",
        "DS-06-08 - Conditional Independence"
      ]
    },
    "name": "Kris Manohar"
  },
  {
    "courses": {
      "COMP 3606": [
        "NC-06-01 - Principles of cellular networks",
        "NC-06-02 - 802.11 networks",
        "NC-06-03 - Issues in supporting mobile nodes (home agents)"
      ],
      "COMP 1603": [
        "SDF-03-01 - Arrays",
        "SDF-03-02 - Records/structs (heterogeneous aggregates)",
        "SDF-03-03 - Strings and string processing",
        "SDF-03-04 - Abstract data types and their implementation",
        "SDF-03-05 - References and aliasing",
        "SDF-03-06 - Linked lists",
        "SDF-03-07 - Strategies for choosing the appropriate data structure",
        "SDF-04-01 - Program comprehension",
        "SDF-04-02 - Program correctness",
        "SDF-04-03 - Simple refactoring",
        "SDF-04-04 - Modern programming environments",
        "SDF-04-05 - Debugging strategies",
        "SDF-04-06 - Documentation and program style"
      ],
      "COMP 2602": [
        "NC-01-01 - Naming and address schemes (DNS, IP addresses, Uniform Resource Identifiers, etc.)",
        "NC-01-02 - Distributed applications (client/server, peer-to-peer, cloud, etc.)",
        "NC-01-03 - HTTP as an application layer protocol",
        "NC-01-04 - Multiplexing with TCP and UDP",
        "NC-01-05 - Socket APIs",
        "NC-02-01 - Error control (retransmission techniques, timers)",
        "NC-02-02 - Flow control (acknowledgements, sliding window)",
        "NC-02-03 - Performance issues (pipelining)",
        "NC-02-04 - TCP",
        "NC-03-01 - Routing versus forwarding",
        "NC-03-02 - Static routing",
        "NC-03-03 - Internet Protocol (IP)",
        "NC-03-04 - Scalability issues (hierarchical addressing)",
        "NC-04-01 - Multiple Access Problem",
        "NC-04-02 - Common approaches to multiple access (exponential-backoff, time division multiplexing, etc)",
        "NC-04-03 - Local Area Networks",
        "NC-04-04 - Ethernet",
        "NC-04-05 - Switching",
        "NC-05-01 - Need for resource allocation",
        "NC-05-02 - Fixed allocation (TDM, FDM, WDM) versus dynamic allocation",
        "NC-05-03 - End-to-end versus network assisted approaches",
        "NC-05-04 - Fairness",
        "NC-05-05 - Principles of congestion control",
        "NC-05-06 - Approaches to Congestion (e.g., Content Distribution Networks) ",
        "NC-06-01 - Principles of cellular networks",
        "NC-06-02 - 802.11 networks",
        "NC-06-03 - Issues in supporting mobile nodes (home agents)"
      ]
    },
    "email": "michael.hosein@sta.uwi.edu",
    "name": "Michael Hosein"
  },
  {
    "courses": {
      "INFO 3607": []
    },
    "name": "Naresh Seegobin",
    "email": "naresh.seegobin@sta.uwi.edu"
  },
  {
    "name": "Patrick Hosein",
    "courses": {
      "COMP 3610": [
        "CN-04-01 - Principles of data visualization",
        "CN-04-02 - Graphing and visualization algorithms",
        "CN-04-04 - Scalability concerns",
        "GV-06-01 - Visualization of 2D/3D scalar fields: colormapping, isosurfaces",
        "GV-06-05 - Visualization design",
        "GV-06-07 - Applications of visualization",
        "IM-10-01 - Usesof data mining",
        "IM-10-02 - Data mining algorithms",
        "IM-10-03 - Associative and sequential patterns",
        "IM-10-04 - Data clustering",
        "IM-10-06 - Data cleaning",
        "IM-10-07 - Data visualization(cross-reference GV/Visualization and CN/Interactive Visualization)",
        "IS-10-01 - Definition and examples of broad variety of machine learning tasks",
        "IS-10-14 - Application of Machine Learning algorithms to Data Mining (cross-reference IM/Data Mining)",
        "PD-08-01 - Internet-Scale computing",
        "PD-08-02 - Cloud services",
        "PD-08-03 - Virtualization (cross-reference SF/Virtualization and Isolation and OS/Virtual Machines)",
        "PD-08-04 - Cloud-based data storage"
      ]
    },
    "email": "patrick.hosein@sta.uwi.edu"
  },
  {
    "name": "Permanand Mohan",
    "courses": {
      "COMP 2611": [],
      "COMP 1602": [],
      "COMP 3609": [],
      "COMP 1601": []
    },
    "email": "permanand.mohan@sta.uwi.edu"
  },
  {
    "email": "phaedra.mohammed@sta.uwi.edu",
    "courses": {
      "COMP 2603": [
        "HCI-01-08 - Principles of good design and good designers; engineering tradeoffs",
        "HCI-02-02 - Elements of visual design (layout, color, fonts, labeling)",
        "HCI-03-01 - Software Architecture Patterns, e.g., Model-View controller; command objects, online, offline (cross  ",
        "HCI-03-03 - Event management and user interaction ",
        "HCI-03-09 - Modern GUI libraries (e.g. iOS, Android, JavaFX) GUIbuilders and UI programming environments (cross-",
        "PL-01-01 - Object-oriented design ",
        "PL-01-02 - Definition of classes: fields, methods, and constructors ",
        "PL-01-03 - Subclasses, inheritance, and method overriding ",
        "PL-01-04 - Dynamic dispatch: definition of method-call ",
        "PL-01-05 - Subtyping (cross-reference PL/Type Systems)",
        "PL-01-06 - Object-oriented idioms for encapsulation ",
        "PL-01-07 - Using collection classes, iterators, and other common library components",
        "PL-03-01 - Events and event handlers ",
        "PL-03-05 - Separation of model, view, and controller",
        "PL-04-03 - Type safety and errors caused by using values inconsistently giventheir intended types",
        "PL-04-04 - Goals and limitations of static typing ",
        "SDF-01-04 - Fundamental design concepts and principles",
        "SDF-02-01 - Basic syntax and semantics of a higher-level language",
        "SDF-02-02 - Variables and primitive data types (e.g., numbers, characters, Booleans)",
        "SDF-02-03 - Expressions and assignments",
        "SDF-02-04 - Simple I/O including file I/O",
        "SDF-02-05 - Conditional and iterative control structures",
        "SDF-02-06 - Functions and parameter passing",
        "SDF-03-01 - Arrays",
        "SDF-03-03 - Strings and string processing",
        "SDF-03-04 - Abstract data types and their implementation",
        "SDF-03-07 - Strategies for choosing the appropriate data structure",
        "SE-05-01 - System design principles:  levels of abstraction (architectural design and detailed design), separation of "
      ],
      "COMP 3607": [
        "CN-01-01 - Models as abstractions of situations",
        "HCI-03-01 - Software Architecture Patterns, e.g., Model-View controller; command objects, online, offline (cross  ",
        "HCI-03-09 - Modern GUI libraries (e.g. iOS, Android, JavaFX) GUIbuilders and UI programming environments (cross-",
        "IM-03-02 - Conceptual models (e.g., entity-relationship, UML diagrams) ",
        "IM-03-05 - Object-oriented models(cross-reference PL/Object-Oriented Programming)",
        "PL-01-01 - Object-oriented design ",
        "PL-01-03 - Subclasses, inheritance, and method overriding ",
        "PL-04-03 - Type safety and errors caused by using values inconsistently giventheir intended types",
        "PL-04-04 - Goals and limitations of static typing ",
        "PL-04-05 - Generic types (parametric polymorphism)",
        "SDF-01-04 - Fundamental design concepts and principles",
        "SDF-04-01 - Program comprehension",
        "SDF-04-02 - Program correctness",
        "SDF-04-03 - Simple refactoring",
        "SDF-04-04 - Modern programming environments",
        "SDF-04-05 - Debugging strategies",
        "SDF-04-06 - Documentation and program style",
        "SE-03-04 - Testing tools including static and dynamic analysis tools",
        "SE-03-05 - Programming environments that automate parts of program construction processes (e.g., automated builds)",
        "SE-04-01 - Describing functional requirements using, for example, use cases or users stories",
        "SE-05-01 - System design principles:  levels of abstraction (architectural design and detailed design), separation of ",
        "SE-05-02 - Design Paradigms such as structured design (top-down functional decomposition), object-oriented analysis ",
        "SE-05-03 - Structural and behavioral models of software designs",
        "SE-05-04 - Design patterns",
        "SE-05-07 - Refactoring designs using design patterns",
        "SE-05-14 - Middleware:  the object-oriented paradigm within middleware, object request brokers and marshalling, ",
        "SE-06-02 - Coding standards",
        "SE-07-08 - Test-driven development",
        "SE-07-10 - Object-oriented testing; systems testing"
      ]
    },
    "name": "Phaedra Mohammed"
  },
  {
    "courses": {
      "INFO 3608": []
    },
    "email": "selris.mahabir@sta.uwi.edu",
    "name": "Selris Mahabir"
  },
  {
    "email": "shareeda.mohammed@sta.uwi.edu",
    "name": "Shareeda Mohammed",
    "courses": {
      "COMP 2606": [
        "SE-01-01 - Systems level considerations, i.e., the interaction of software with its intended environment (cross-",
        "SE-01-02 - Introduction to software process models (e.g., waterfall, incremental, agile)",
        "SE-01-03 - Programming in the large vs. individual programming",
        "SE-01-04 - Evaluation of software process models",
        "SE-01-05 - Software quality concepts",
        "SE-02-01 - Team participation",
        "SE-02-03 - Risk(cross reference IAS/Secure Software Engineering) ",
        "SE-02-04 - Team management",
        "SE-02-05 - Project management",
        "SE-02-08 - Risk",
        "SE-04-01 - Describing functional requirements using, for example, use cases or users stories",
        "SE-04-02 - Properties of requirements including consistency, validity, completeness, and feasibility",
        "SE-04-03 - Software requirements elicitation",
        "SE-04-04 - Describing system data using, for example, class diagrams or entity-relationship diagrams",
        "SE-04-05 - Non-functional requirements and their relationship to software quality (cross-reference IAS/Secure ",
        "SE-04-06 - Evaluation and use of requirements specifications",
        "SE-04-07 - Requirements analysis modeling techniques",
        "SE-04-09 - Prototyping",
        "SE-04-10 - Basic concepts of formal requirements specification",
        "SE-04-11 - Requirements specification",
        "SE-04-12 - Requirements validation",
        "SE-05-01 - System design principles:  levels of abstraction (architectural design and detailed design), separation of ",
        "SE-05-03 - Structural and behavioral models of software designs",
        "SE-05-06 - Software architecture concepts and standard architectures (e.g. client-server, n-layer, transform centered, ",
        "SE-07-01 - Verification and validation concepts",
        "SE-07-02 - Inspections, reviews, audits",
        "SE-07-03 - Testing types, including human computer interface, usability,reliability, security, conformance to ",
        "SE-07-08 - Test-driven development",
        "SE-08-03 - Characteristics of maintainable software",
        "SE-08-05 - Software reuse"
      ],
      "COMP 3613": [
        "SE-01-03 - Programming in the large vs. individual programming",
        "SE-01-04 - Evaluation of software process models",
        "SE-01-05 - Software quality concepts",
        "SE-01-06 - Process improvement",
        "SE-01-07 - Software process capability maturity models",
        "SE-01-08 - Software process measurements",
        "SE-02-01 - Team participation",
        "SE-02-03 - Risk(cross reference IAS/Secure Software Engineering) ",
        "SE-02-04 - Team management",
        "SE-02-05 - Project management",
        "SE-02-06 - Software measurement and estimation techniques ",
        "SE-02-08 - Risk",
        "SE-03-01 - Software configuration management and version control",
        "SE-03-02 - Release management",
        "SE-03-04 - Testing tools including static and dynamic analysis tools",
        "SE-04-10 - Basic concepts of formal requirements specification",
        "SE-04-11 - Requirements specification",
        "SE-04-12 - Requirements validation",
        "SE-04-13 - Requirements tracing",
        "SE-05-08 - The use of components in design:  component selection, design, adaptation and assembly of components, ",
        "SE-05-12 - Tradeoffs between different aspects of quality",
        "SE-06-01 - Coding practices: techniques, idioms/patterns, mechanisms for building quality programs (cross-reference ",
        "SE-06-04 - Development context: “green field” vs. existing code base",
        "SE-07-10 - Object-oriented testing; systems testing",
        "SE-08-03 - Characteristics of maintainable software",
        "SE-08-04 - Reengineering systems",
        "SE-08-05 - Software reuse",
        "SE-09-01 - Software reliability engineering concepts",
        "SE-09-02 - Software reliability, system reliability and failure behavior (cross-reference SF/Reliability Through ",
        "SE-09-04 - Software reliability models"
      ],
      "INFO 3600": [
        "IM-01-01 - Information systems as socio-technical systems",
        "IM-01-05 - Information management applications ",
        "IM-01-08 - Quality issues: reliability, scalability, efficiency, and effectiveness"
      ]
    }
  },
  {
    "name": "Nicholas Mendez",
    "courses": {
      "INFO 2602": [
        "GV-06-07 - Applications of visualization",
        "HCI-03-01 - Software Architecture Patterns, e.g., Model-View controller; command objects, online, offline (cross  ",
        "HCI-03-06 - Presenting information: navigation, representation, manipulation",
        "HCI-03-10 - Declarative Interface Specification: Stylesheets and DOMs ",
        "HCI-03-11 - Data-driven applications (database-backed web pages) ",
        "HCI-03-12 - Cross-platform design ",
        "HCI-03-13 - Design for resource-constrained devices(e.g. small, mobile devices)",
        "HCI-04-05 - Prototyping techniques and tools, e.g.,sketching, storyboards, low-fidelity prototyping, wireframes ",
        "HCI-10-08 - Authentication and authorization, access control (mandatory vs. discretionary)",
        "IAS-02-01 - Input validation and data sanitization (cross-reference SDF/Development Methods/Program Correctness)",
        "IAS-02-03 - Examples of input validation and data sanitization errors (cross-reference SDF/Development ",
        "IAS-02-05 - Correct handling of exceptions and unexpectedbehaviors (cross-reference SDF/Development ",
        "IAS-02-06 - Correct usage of third-party components (cross-reference SDF/Development Methods/program correctness ",
        "IAS-06-02 - Session management, authentication",
        "IAS-06-04 - Client-side security",
        "IM-03-01 - Data modeling",
        "IM-03-02 - Conceptual models (e.g., entity-relationship, UML diagrams) ",
        "IM-03-05 - Object-oriented models(cross-reference PL/Object-Oriented Programming)",
        "NC-01-01 - Naming and address schemes (DNS, IP addresses, Uniform Resource Identifiers, etc.)",
        "NC-01-02 - Distributed applications (client/server, peer-to-peer, cloud, etc.)",
        "NC-01-03 - HTTP as an application layer protocol",
        "PBD-02-01 - Web programming languages (e.g., HTML5, Java Script, PHP, CSS) ",
        "PBD-02-02 - Web platform constraints ",
        "PBD-02-04 - Web standards",
        "PL-01-02 - Definition of classes: fields, methods, and constructors ",
        "PL-03-01 - Events and event handlers ",
        "PL-03-03 - Using a reactive framework",
        "PL-03-05 - Separation of model, view, and controller",
        "SP-08-04 - History oftheInternet",
        "SE-01-05 - Software quality concepts",
        "SE-02-01 - Team participation",
        "SE-02-02 - Effort Estimation (at the personal level)",
        "SE-02-05 - Project management",
        "SE-03-01 - Software configuration management and version control",
        "SE-03-05 - Programming environments that automate parts of program construction processes (e.g., automated builds)",
        "SE-04-09 - Prototyping",
        "SE-05-01 - System design principles:  levels of abstraction (architectural design and detailed design), separation of ",
        "SE-05-06 - Software architecture concepts and standard architectures (e.g. client-server, n-layer, transform centered, ",
        "SE-05-13 - Application frameworks",
        "SE-07-08 - Test-driven development"
      ],
      "INFO 1601": [
        "GV-05-06 - Key-frame animation",
        "HCI-02-01 - Principles of graphical user interfaces (GUIs)",
        "HCI-02-02 - Elements of visual design (layout, color, fonts, labeling)",
        "HCI-03-09 - Modern GUI libraries (e.g. iOS, Android, JavaFX) GUIbuilders and UI programming environments (cross-",
        "HCI-03-10 - Declarative Interface Specification: Stylesheets and DOMs ",
        "HCI-03-13 - Design for resource-constrained devices(e.g. small, mobile devices)",
        "NC-01-01 - Naming and address schemes (DNS, IP addresses, Uniform Resource Identifiers, etc.)",
        "NC-01-03 - HTTP as an application layer protocol",
        "NC-01-05 - Socket APIs",
        "PD-01-01 - Multiple simultaneous computations",
        "PD-01-02 - Goals of parallelism (e.g., throughput) versus concurrency (e.g., controlling access to shared resources)",
        "PD-01-03 - Parallelism, communication, and coordination ",
        "PL-04-01 - A type as a set of values together with a set of operations ",
        "PL-04-02 - Association of types to variables, arguments, results, and fields ",
        "PL-04-03 - Type safety and errors caused by using values inconsistently giventheir intended types",
        "PL-04-04 - Goals and limitations of static typing ",
        "SDF-01-04 - Fundamental design concepts and principles",
        "SDF-02-01 - Basic syntax and semantics of a higher-level language",
        "SDF-02-02 - Variables and primitive data types (e.g., numbers, characters, Booleans)",
        "SDF-02-03 - Expressions and assignments",
        "SDF-02-05 - Conditional and iterative control structures",
        "SDF-02-06 - Functions and parameter passing",
        "SDF-03-01 - Arrays",
        "SDF-03-02 - Records/structs (heterogeneous aggregates)",
        "SDF-03-05 - References and aliasing",
        "SDF-03-07 - Strategies for choosing the appropriate data structure",
        "SDF-04-04 - Modern programming environments",
        "SE-01-01 - Systems level considerations, i.e., the interaction of software with its intended environment (cross-",
        "SE-05-08 - The use of components in design:  component selection, design, adaptation and assembly of components, ",
        "SE-07-08 - Test-driven development",
        "SF-01-04 - Simple application-level parallel processing: request level (web services/client-server/distributed), single "
      ],
      "INFO 1600": []
    }
  },
  {
    "name": "Wayne Goodridge",
    "email": "wayne.goodridge@sta.uwi.edu",
    "courses": {
      "INFO 3605": [],
      "INFO 2604": []
    }
  }
]