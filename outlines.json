[
  {
    "Campus and Faculty": "FST, STA",
    "Department": "DCIT",
    "Course Code & title": "COMP 1601 Computer Programming I",
    "Semester and Level": "Semester 1  Level 1",
    "Pre-requisites": "None",
    "Co-requisites": "",
    "Anti-requisites": "",
    "Course Type": "Core",
    "Credits": "3",
    "Projected Enrolment": "",
    "Project Start Date": "",
    "Mode of Delivery": "Face-to-Face ☐     Blended ☑     Online ☐",
    "Course Description": "This course uses an appropriate, contemporary programming language as a tool to teach fundamental programming concepts, topics and techniques. The main concepts covered are sequence, selection and repetition logic, character and string manipulation, functions, and a basic introduction to arrays and their applications.",
    "Rationale": "This course equips first year undergraduate students with the skills to solve problems on computer based systems. It identifies what type of problems can be solved by such systems and which cannot.  The focus in this course is problem description, definition and presentation using either flowcharting or pseudocode tools. By guiding students towards developing structured algorithms using well known methods and techniques, the course lays the foundation for building competency in programming.",
    "Course Aims": "This course aims to provide an introduction to programming. The course teaches students how to implement algorithmic solutions for common problems and tasks. Students are exposed to a contemporary programming language and learn how to write, test and debug programs.",
    "Course Learning Outcomes": [
      "On successful completion of this course, students will be able to:",
      "Discuss the importance of algorithms in the problem-solving process.",
      "Discuss how a problem may be solved by multiple algorithms, each with different properties.",
      "Create algorithms for solving simple problems.",
      "Use a programming language to implement, test, and debug algorithms for solving simple problems.",
      "Analyse and explain the behaviour of simple programs involving the fundamental programming constructs variables, expressions, assignments, I/O, control constructs, functions, parameter passing, and recursion.",
      "Identify, describe and write programs that use primitive data types.",
      "Modify and expand short programs that use standard conditional and iterative control structures and functions.",
      "Design, implement, test, and debug a program that uses each of the following fundamental programming constructs: basic computation, simple I/O, standard conditional and iterative structures, the definition of functions, and parameter passing.",
      "Write a program that uses file I/O to provide persistence across multiple executions.",
      "Choose appropriate conditional and iteration constructs for a given programming task.",
      "Describe the concept of recursion and give examples of its use.",
      "Identify the base case and the general case of a recursively-defined problem.",
      ""
    ],
    "Course Content": "<t>1. The concept and properties of algorithms\r\n2. Informal comparison of algorithm efficiency (e.g., operation counts)\r\n3. The role of algorithms in the problem-solving process\r\n4. Basic syntax and semantics of a higher-level language \r\n5. Variables and primitive data types (e.g., numbers, characters, Booleans, strings)\r\n6. Expressions and assignments\r\n7. Conditional and iterative control structures\r\n8. Simple I/O including file I/O\r\n9. Functions and parameter passing\r\n10. One dimensional arrays\r\n11. The concept of recursion</t>",
    "Teaching Methods": [
      {
        "Name": "Interactive Lectures",
        "Description": "Live lectures delivered twice weekly"
      },
      {
        "Name": "Online Activities (myElearning)",
        "Description": "Quizzes"
      },
      {
        "Name": "Laboratory Work",
        "Description": ""
      },
      {
        "Name": "Flipped Classroom",
        "Description": "Readings from text book. \r\nVideo lectueres by the author of the essential textbook"
      },
      {
        "Name": "Inquiry-based Learning",
        "Description": "Interactive tutorial sessions - students solve problems on the board"
      },
      {
        "Name": "Problem-based Learning",
        "Description": "Apply programming concepts to real world problems"
      },
      {
        "Name": "Groupwork",
        "Description": ""
      }
    ],
    "Contact and Credit hours": [
      {
        "Type": "",
        "Duration": "",
        "Contact Hours": "",
        "Credit Hours": ""
      },
      {
        "Type": "",
        "Duration": "",
        "Contact Hours": "",
        "Credit Hours": ""
      },
      {
        "Type": "",
        "Duration": "",
        "Contact Hours": "",
        "Credit Hours": ""
      }
    ],
    "Course Assessments Description": "",
    "Matrix": [
      {
        "Assessment": "Assignment 1",
        "Learning Outcomes": "1, 2, 3",
        "Assessment Description": "Take home programming problems",
        "Weighting %": "5",
        "Duration": "10-14 days"
      },
      {
        "Assessment": "Assignment 2",
        "Learning Outcomes": "3, 4, 5, 7, 8, 11",
        "Assessment Description": "Take home programming problems",
        "Weighting %": "6",
        "Duration": "10-14 days"
      },
      {
        "Assessment": "Assignment 3 ",
        "Learning Outcomes": "",
        "Assessment Description": "Take home programming problems",
        "Weighting %": "6",
        "Duration": "10-14 days"
      },
      {
        "Assessment": "Quiz 1 ",
        "Learning Outcomes": "1, 2, 3, 4, 5",
        "Assessment Description": "Online quiz, MCQ",
        "Weighting %": "1",
        "Duration": "15-30 min"
      },
      {
        "Assessment": "Quiz 2",
        "Learning Outcomes": "3, 4, 5, 6, 7, 11",
        "Assessment Description": "Online quiz, MCQ",
        "Weighting %": "1",
        "Duration": "15-30 min"
      },
      {
        "Assessment": "Quiz 3",
        "Learning Outcomes": "5, 6, 9, 11",
        "Assessment Description": "Online quiz, MCQ",
        "Weighting %": "1",
        "Duration": "15-30 min"
      },
      {
        "Assessment": "Coursework Exam 1",
        "Learning Outcomes": "3, 4, 5, 7, 8, 11",
        "Assessment Description": "Problems & short answer questions",
        "Weighting %": "10",
        "Duration": "1.5 hours"
      },
      {
        "Assessment": "Coursework Exam 2",
        "Learning Outcomes": "3, 4, 5, 6, 7, 8, 9, 10 11, 12",
        "Assessment Description": "Problems & short answer questions",
        "Weighting %": "20",
        "Duration": "1.5 hours"
      },
      {
        "Assessment": "Final Examinaiton",
        "Learning Outcomes": "1, 2, 3, 4, 5, 6, 7, 8, 9, 10 11, 12",
        "Assessment Description": "Problems & short answer questions",
        "Weighting %": "50",
        "Duration": "2 hours"
      }
    ],
    "Learning Resources": [
      "Noel Kalicharan.  C Programming - A Beginner's Course. 2005.  CreateSpace Independent Publishing Platform.",
      "",
      ""
    ],
    "Staffing Requirements": "1 Lecturer, 1 Tutor, 1 Marker",
    "Additional Cost": "",
    "Collaboration": "",
    "Course Coordinator": "",
    "Course Calendar": [
      {
        "Week": "1",
        "Topics": "1, 2",
        "Required Readings": "C Programming - A Beginner's Course: Chapter 1",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "",
        "Date": ""
      },
      {
        "Week": "2",
        "Topics": "2, 3",
        "Required Readings": "C Programming - A Beginner's Course: Chapter 1",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "Assignment 1",
        "Date": "WK2"
      },
      {
        "Week": "3",
        "Topics": "4",
        "Required Readings": "C Programming - A Beginner's Course: Chapter 2",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "",
        "Date": ""
      },
      {
        "Week": "4",
        "Topics": "5",
        "Required Readings": "C Programming - A Beginner's Course: Chapter 2 and  6",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "Quiz 1",
        "Date": "WK4"
      },
      {
        "Week": "5",
        "Topics": "6",
        "Required Readings": "C Programming - A Beginner's Course: Chapter 2",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "",
        "Date": ""
      },
      {
        "Week": "6",
        "Topics": "7",
        "Required Readings": "C Programming - A Beginner's Course: Chapter 3",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "Assignment 2",
        "Date": "WK6"
      },
      {
        "Week": "7",
        "Topics": "8",
        "Required Readings": "C Programming - A Beginner's Course: Chapter 6",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "",
        "Date": ""
      },
      {
        "Week": "8",
        "Topics": "9",
        "Required Readings": "C Programming - A Beginner's Course: Chapter 7",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "Coursework Exam 1",
        "Date": "WK8"
      },
      {
        "Week": "9",
        "Topics": "9",
        "Required Readings": "C Programming - A Beginner's Course: Chapter 7",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "Quiz 2",
        "Date": "WK9"
      },
      {
        "Week": "10",
        "Topics": "10",
        "Required Readings": "C Programming - A Beginner's Course: Chapter 8",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "Assignment 3",
        "Date": "WK10"
      },
      {
        "Week": "11",
        "Topics": "10, 11",
        "Required Readings": "C Programming - A Beginner's Course: Chapter 8",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "Quiz 3",
        "Date": "WK11"
      },
      {
        "Week": "12",
        "Topics": "11",
        "Required Readings": "C Programming - A Beginner's Course: Chapter 8",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "Coursework Exam 2",
        "Date": "WK12"
      },
      {
        "Week": "13",
        "Topics": "Course Review\r\n (No introduction of new subject matter)",
        "Required Readings": "",
        "Learning Activities": "",
        "Assessment": "",
        "Date": ""
      }
    ]
  },
  {
    "Campus and Faculty": "FST, STA",
    "Department": "DCIT",
    "Course Code & title": "COMP 1602 Computer Programming II",
    "Semester and Level": "Semester 2  Level 1",
    "Pre-requisites": "None",
    "Co-requisites": "",
    "Anti-requisites": "",
    "Course Type": "Core",
    "Credits": "3",
    "Projected Enrolment": "",
    "Project Start Date": "",
    "Mode of Delivery": "Face-to-Face ☐     Blended ☑     Online ☐",
    "Course Description": "This course uses an appropriate programming language as a tool to teach intermediate programming concepts. The main concepts covered are structures, one and two dimensional arrays and applications involving searching, sorting and merging, random number generation, numerical methods, games and simulation.",
    "Rationale": "This course introduces new programming concepts. It focuses on the use of common searching and sorting methods and character and string manipulation which are two very important concepts that are necessary in most software systems.",
    "Course Aims": "This course aims to introduce students to intermediate programming concepts.This course teaches students the foundations of modeling, searching, sorting, and handling multi-dimensional data. Mastery of these essential topics in Computer Science allows students to extend the capabilities of a given programming language to meet the needs of a specific problem.",
    "Course Learning Outcomes": [
      "On successful completion of this course, students will be able to:",
      "Implement basic numerical algorithms.",
      "Implement simple search algorithms and explain the differences in their time complexities.",
      "Apply Bayes’ rule to determine the probability of a hypothesis given evidence.",
      "Explain how conditional independence assertions allow for greater efficiency of probabilistic systems.",
      "Use random number generation in simulation and game development.",
      "Analyze and explain the behavior of simple programs involving the fundamental programming constructs variables, expressions, assignments, I/O, control constructs, functions, parameter passing, and recursion.",
      "Discuss the appropriate use of built-in data structures.",
      "Describe common applications for each of the following data structures: stack, queue, priority queue, set, and map.",
      "Design programs which utilize one and two-dimensional arrays.",
      "Write programs that use each of the following data structures: arrays, records/structs, and strings.",
      "",
      "",
      "1. Arrays \r\n1.1. Declaring one-dimensional arrays \r\n1.2. Finding largest and smallest values \r\n1.3. Functions and parameter passing\r\n1.4. Passing arrays as arguments  \r\n2. Structures \r\n2.1. Declaration \r\n2.2. User Defined Types \r\n2.3. Array of Structures \r\n2.4. Nested Structures \r\n3. Strings\r\n3.1 C-Strings and Strings\r\n3.2. Array of Strings \r\n3.3. Strings and string processing\r\n4. Sorting, Searching and Merging \r\n4.1. Sorting arrays \r\n4.2. Inserting elements in place \r\n4.3. Sorting parallel arrays \r\n4.4. Insertion Sort, Selection Sort, Bubble Sort \r\n4.5. Linear Search\r\n4.6. Binary Search\r\n4.7. Merging ordered lists, Merge Sort\r\n5. Two dimensional arrays \r\n5.1. 2 dimensional arrays: concept, creating, adding data \r\n5.2. 2 dimensional arrays: traversing column only, row only, specific areas of the 2D array \r\n5.3. 2 dimensional arrays: Manipulating \r\n6. Random Numbers \r\n6.1. Random and pseudo random numbers \r\n6.2. Random number generation and ranges \r\n6.3. Axioms of probability \r\n6.4. Probabilistic inference \r\n6.5. Bayes’ Rule\r\n7. Games and Simulation \r\n7.1. Simulation of real-life problems \r\n7.2. Simulating a queue \r\n8. Files\r\n8.1. Reading data from a file\r\n8.2. Sending output to a file\r\n8.3. Binary files\r\n8.4. Text file vs. Binary file\r\n8.5. Opening and closing files\r\n8.6. Random Access files\r\n8.7. Indexed files"
    ],
    "Course Content": "",
    "Teaching Methods": [
      {
        "Name": "Online Activities (myElearning)",
        "Description": "Quizzes"
      },
      {
        "Name": "Laboratory Work",
        "Description": ""
      },
      {
        "Name": "Flipped Classroom",
        "Description": "Readings from text book. \r\nVideo lectueres by the author of the essential textbook"
      },
      {
        "Name": "Inquiry-based Learning",
        "Description": "Interactive tutorial sessions - students solve problems on the board"
      },
      {
        "Name": "Problem-based Learning",
        "Description": "Apply programming concepts to real world problems "
      },
      {
        "Name": "Groupwork",
        "Description": ""
      },
      {
        "Name": "",
        "Description": ""
      }
    ],
    "Contact and Credit hours": [
      {
        "Type": "",
        "Duration": "",
        "Contact Hours": "",
        "Credit Hours": ""
      },
      {
        "Type": "",
        "Duration": "",
        "Contact Hours": "",
        "Credit Hours": ""
      },
      {
        "Type": "",
        "Duration": "",
        "Contact Hours": "",
        "Credit Hours": ""
      }
    ],
    "Course Assessments Description": "",
    "Matrix": [
      {
        "Assessment": "Assignment 2",
        "Learning Outcomes": "5, 7, 8, 10",
        "Assessment Description": "Take home programming problems",
        "Weighting %": "6",
        "Duration": "10-14 days"
      },
      {
        "Assessment": "Assignment 3 ",
        "Learning Outcomes": "3, 5, 9",
        "Assessment Description": "Take home programming problems",
        "Weighting %": "6",
        "Duration": "10-14 days"
      },
      {
        "Assessment": "Quiz 1 ",
        "Learning Outcomes": "",
        "Assessment Description": "Online quiz, MCQ",
        "Weighting %": "1",
        "Duration": "15-30 min"
      },
      {
        "Assessment": "Quiz 2",
        "Learning Outcomes": "3, 4, 5, 9",
        "Assessment Description": "Online quiz, MCQ",
        "Weighting %": "1",
        "Duration": "15-30 min"
      },
      {
        "Assessment": "Quiz 3",
        "Learning Outcomes": "1, 2 9",
        "Assessment Description": "Online quiz, MCQ",
        "Weighting %": "1",
        "Duration": "15-30 min"
      },
      {
        "Assessment": "Coursework Exam 1",
        "Learning Outcomes": "1, 5, 6, 7, 8, 10",
        "Assessment Description": "Problems & short answer questions",
        "Weighting %": "10",
        "Duration": "1.5 hours"
      },
      {
        "Assessment": "Coursework Exam 2",
        "Learning Outcomes": "1 - 10.",
        "Assessment Description": "Problems & short answer questions",
        "Weighting %": "20",
        "Duration": "1.5 hours"
      },
      {
        "Assessment": "Final Examination",
        "Learning Outcomes": "1 - 10.",
        "Assessment Description": "Problems & short answer questions",
        "Weighting %": "50",
        "Duration": "2 hours"
      },
      {
        "Assessment": "",
        "Learning Outcomes": "",
        "Assessment Description": "",
        "Weighting %": "",
        "Duration": ""
      }
    ],
    "Learning Resources": [
      "",
      "",
      "Recommended"
    ],
    "Staffing Requirements": "",
    "Additional Cost": "",
    "Collaboration": "",
    "Course Coordinator": "",
    "Course Calendar": [
      {
        "Week": "2",
        "Topics": "Arrays 1.3, 1.4",
        "Required Readings": "C Programming - A Beginner's Course, Chapter 8",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "Assignment 1",
        "Date": "Week 2"
      },
      {
        "Week": "3",
        "Topics": "Structures 2.1, 2.2, 2.4",
        "Required Readings": "C Programming - An Advanced Course, Chapter 2",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "X",
        "Date": ""
      },
      {
        "Week": "4",
        "Topics": "Structures 2.3, Files 8.1 - 8.5 ",
        "Required Readings": "C Programming - An Advanced Course, Chapter 2",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "Quiz 1",
        "Date": "Week 4"
      },
      {
        "Week": "5",
        "Topics": "Files 8.6, 8.7, Strings 3.1",
        "Required Readings": "C Programming - An Advanced Course, Chapter 8, C Programming - A Beginner's Course, Chapter 2",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "X",
        "Date": ""
      },
      {
        "Week": "6",
        "Topics": "Strings 3.2, 3.3",
        "Required Readings": "C Programming - A Beginner's Course, Chapter 2",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "Coursework exam 1",
        "Date": "Week 6"
      },
      {
        "Week": "7",
        "Topics": "Random Numbers 6.1 - 6.4",
        "Required Readings": "C Programming - An Advanced Course, Chapter 7",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "Assignment 2",
        "Date": "Week 7"
      },
      {
        "Week": "8",
        "Topics": "Random Numbers 6.5, 7.1, 7.2",
        "Required Readings": "C Programming - An Advanced Course, Chapter 7",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "X",
        "Date": ""
      },
      {
        "Week": "9",
        "Topics": "Two dimensional arrays 5.1, 5.2, 5.3",
        "Required Readings": "C Programming - An Advanced Course, Chapter 1",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "Assignment 3, Quiz 2",
        "Date": "Week 9"
      },
      {
        "Week": "10",
        "Topics": "Sorting, Searching and Merging 4.1, 4.2, 4.3",
        "Required Readings": "C Programming - An Advanced Course, Chapter 1",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "X",
        "Date": ""
      },
      {
        "Week": "11",
        "Topics": "Sorting, Searching and Merging 4.4, 4.5",
        "Required Readings": "C Programming - An Advanced Course, Chapter 1",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "Quiz 3",
        "Date": "Week 11"
      },
      {
        "Week": "12",
        "Topics": "Sorting, Searching and Merging 4.6, 4.7",
        "Required Readings": "C Programming - An Advanced Course, Chapter 1",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "Coursework Exam 2",
        "Date": "Week 12"
      },
      {
        "Week": "13",
        "Topics": "Course Review\r\n (No introduction of new subject matter)",
        "Required Readings": "",
        "Learning Activities": "",
        "Assessment": "X",
        "Date": ""
      },
      {
        "Week": "",
        "Topics": "",
        "Required Readings": "",
        "Learning Activities": "",
        "Assessment": "",
        "Date": ""
      }
    ]
  },
  {
    "Campus and Faculty": "FST, STA",
    "Department": "DCIT",
    "Course Code & title": "COMP 1603 Computer Programming III",
    "Semester and Level": "Semester 2  Level 1",
    "Pre-requisites": "None",
    "Co-requisites": "",
    "Anti-requisites": "",
    "Course Type": "Core",
    "Credits": "3",
    "Projected Enrolment": "",
    "Project Start Date": "",
    "Mode of Delivery": "Face-to-Face ☐     Blended ☑     Online ☐",
    "Course Description": "This course uses an appropriate programming language as a tool to teach intermediate programming concepts. The main concepts covered are pointers, linked lists, stacks, queues, sets. and maps and their implementations using arrays and linked lists and recursion.",
    "Rationale": "This course introduces intermediate programming concepts and abstract data types. It focuses on the use of common abstract data types such as linked lists, stacks, queues, sets, and maps which are important concepts that are inherent in most systems. It introduces the concept of dynamic storage methods which are necessary in programming easily adaptive systems. It also covers the conditions under which dynamic storage is applicable and when it is not.",
    "Course Aims": "This course aims to introduce students to pointers and abstract data types.This course teaches students the foundations of working with dynamic allocations, interfaces, and re-use of code. Mastery of these essential topics in Computer Science allows students to design and implement memory-efficient data types and solutions when meeting the needs of a specific problem.",
    "Course Learning Outcomes": [
      "On successful completion of this course, students will be able to:",
      "Choose the appropriate data structure for modeling a given problem.",
      "Design and use the following data structures: arrays, records/structs, strings, linked lists, stacks, queues, sets, and maps to model real world objects and concepts.",
      "Write programs that use each of the following data structures: arrays, records/structs, strings, linked lists, stacks, queues, sets, and maps.",
      "Compare alternative implementations of data structures with respect to performance.",
      "Explain what a pointer is and how it can be used.",
      "Describe how references allow for objects to be accessed in multiple ways.",
      "Compare and contrast the costs and benefits of dynamic and static data structure implementations.",
      "Identify common coding errors that lead to insecure programs (e.g., buffer overflows, memory leaks, malicious code) and apply strategies for avoiding such errors.",
      "Conduct a personal code review (focused on common coding errors) on a program component using a provided checklist.",
      "Use recursion as a powerful technique in problem solving.",
      "Identify the base case and the general case of a recursively-defined problem.",
      "Apply a variety of strategies to the testing and debugging of simple programs.",
      "1. Records/structs (heterogeneous aggregates)\r\n1.1. Declaration \r\n1.2. User Defined Types \r\n1.3. Array of Structures \r\n1.4. Nested Structures \r\n2. Pointers \r\n2.1. Concept of a pointer \r\n2.2. Pointers as arguments \r\n2.3. Pointer arithmetic \r\n3. Linked Lists \r\n3.1. Operations on a Linked List (inserting, deleting, counting, searching) \r\n3.2. Allocating Memory (e.g., sizeof, malloc, calloc, and free in C) \r\n3.3. Sorted Lists \r\n3.4. Merging \r\n4. Abstract data types and their implementation\r\n4.1. Stacks (Array and Linked List Implementation) \r\n4.1.1. Creating a Stack Header File \r\n4.1.2. How to convert from infix to postfix \r\n4.2. Queues (Array and Linked List Implementation) \r\n4.3. Priority queues (Array and Linked List Implementation) \r\n4.4. Sets\r\n4.5. Maps\r\n5. Recursion\r\n5.1. The concept of recursion \r\n5.2. Recursive functions \r\n5.3. Recursive applications"
    ],
    "Course Content": "",
    "Teaching Methods": [
      {
        "Name": "Online Activities (myElearning)",
        "Description": "Quizzes"
      },
      {
        "Name": "Laboratory Work",
        "Description": ""
      },
      {
        "Name": "Flipped Classroom",
        "Description": "Readings from text book. \r\nVideo lectueres by the author of the essential textbook"
      },
      {
        "Name": "Inquiry-based Learning",
        "Description": "Interactive tutorial sessions - students solve problems on the board"
      },
      {
        "Name": "Problem-based Learning",
        "Description": "Apply programming concepts to write space-efficient programs for real world problems"
      },
      {
        "Name": "Groupwork",
        "Description": ""
      },
      {
        "Name": "",
        "Description": ""
      }
    ],
    "Contact and Credit hours": [
      {
        "Type": "",
        "Duration": "",
        "Contact Hours": "",
        "Credit Hours": ""
      },
      {
        "Type": "",
        "Duration": "",
        "Contact Hours": "",
        "Credit Hours": ""
      },
      {
        "Type": "",
        "Duration": "",
        "Contact Hours": "",
        "Credit Hours": ""
      }
    ],
    "Course Assessments Description": "",
    "Matrix": [
      {
        "Assessment": "Assignment 2",
        "Learning Outcomes": "1, 2, 3, 5, 6, 7, 9, 12",
        "Assessment Description": "Take home programming problems",
        "Weighting %": "6",
        "Duration": "10-14 days"
      },
      {
        "Assessment": "Assignment 3 ",
        "Learning Outcomes": "1, 2, 3, 4, 7, 8, 9, 12",
        "Assessment Description": "Take home programming problems",
        "Weighting %": "6",
        "Duration": "10-14 days"
      },
      {
        "Assessment": "Quiz 1 ",
        "Learning Outcomes": "",
        "Assessment Description": "Online quiz, MCQ",
        "Weighting %": "1",
        "Duration": "15-30 min"
      },
      {
        "Assessment": "Quiz 2",
        "Learning Outcomes": "1, 2, 3, 4, 5, 6, 7, 8",
        "Assessment Description": "Online quiz, MCQ",
        "Weighting %": "1",
        "Duration": "15-30 min"
      },
      {
        "Assessment": "Quiz 3",
        "Learning Outcomes": "1, 2, 3, 4, 5, 6, 7, 8, 10",
        "Assessment Description": "Online quiz, MCQ",
        "Weighting %": "1",
        "Duration": "15-30 min"
      },
      {
        "Assessment": "Coursework Exam 1",
        "Learning Outcomes": "1, 2, 3, 4, 5, 6, 7",
        "Assessment Description": "Problems & short answer questions",
        "Weighting %": "10",
        "Duration": "1.5 hours"
      },
      {
        "Assessment": "Coursework Exam 2",
        "Learning Outcomes": "1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11",
        "Assessment Description": "Problems & short answer questions",
        "Weighting %": "20",
        "Duration": "1.5 hours"
      },
      {
        "Assessment": "Final Examination",
        "Learning Outcomes": "1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11",
        "Assessment Description": "Problems & short answer questions",
        "Weighting %": "50",
        "Duration": "2 hours"
      },
      {
        "Assessment": "",
        "Learning Outcomes": "",
        "Assessment Description": "",
        "Weighting %": "",
        "Duration": ""
      }
    ],
    "Learning Resources": [
      "Robert Sedgewick. Algorithms. 1983. Addison-Wesley.",
      "",
      "Recommended"
    ],
    "Staffing Requirements": "",
    "Additional Cost": "",
    "Collaboration": "",
    "Course Coordinator": "",
    "Course Calendar": [
      {
        "Week": "2",
        "Topics": "Pointers 2.1, 2.2",
        "Required Readings": "C Programming - An Advanced Course, Chapter 3",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "Assignment 1",
        "Date": "Week 2"
      },
      {
        "Week": "3",
        "Topics": "Pointers 2.2, 2.3",
        "Required Readings": "C Programming - An Advanced Course, Chapter 3",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "X",
        "Date": ""
      },
      {
        "Week": "4",
        "Topics": "Linked List 3.1, 3.2",
        "Required Readings": "C Programming - An Advanced Course, Chapter 4",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "Quiz 1",
        "Date": "Week 4"
      },
      {
        "Week": "5",
        "Topics": "Linked List 3.3, 3.4",
        "Required Readings": "C Programming - An Advanced Course, Chapter 4",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "Assignment 2",
        "Date": "Week 5"
      },
      {
        "Week": "6",
        "Topics": "Stacks 4.1",
        "Required Readings": "C Programming - An Advanced Course, Chapter 5",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "X",
        "Date": ""
      },
      {
        "Week": "7",
        "Topics": "Stacks 4.1, Queues 4.2",
        "Required Readings": "C Programming - An Advanced Course, Chapter 5, Robert Sedgewick. Algorithms, Chapter 11",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "X",
        "Date": ""
      },
      {
        "Week": "8",
        "Topics": "Queues 4.2,  Priority queues 4.3",
        "Required Readings": "Robert Sedgewick. Algorithms, Chapter 11",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "Coursework Exam 1",
        "Date": "Week 8"
      },
      {
        "Week": "9",
        "Topics": "Priority queues 4.3, Sets 4.4",
        "Required Readings": "Robert Sedgewick. Algorithms, Chapter 11, Chapter 30 pgs 308 - 405",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "Quiz 2",
        "Date": "Week 9"
      },
      {
        "Week": "10",
        "Topics": "Sets 4.4, Maps 4.5",
        "Required Readings": "Robert Sedgewick. Algorithms, Chapter 30 pgs 308 - 405",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "Assignment 3",
        "Date": "Week 10"
      },
      {
        "Week": "11",
        "Topics": "Recursion 5.1, 5.2",
        "Required Readings": "C Programming - An Advanced Course, Chapter 6",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "Quiz 3",
        "Date": "Week 11"
      },
      {
        "Week": "12",
        "Topics": "Recursion 5.3",
        "Required Readings": "C Programming - An Advanced Course, Chapter 6",
        "Learning Activities": "Lectures, Tutorials, Worksheets, online videos",
        "Assessment": "Coursework Exam 2",
        "Date": "Week 12"
      },
      {
        "Week": "13",
        "Topics": "Course Review\r\n (No introduction of new subject matter)",
        "Required Readings": "",
        "Learning Activities": "",
        "Assessment": "X",
        "Date": ""
      },
      {
        "Week": "",
        "Topics": "",
        "Required Readings": "",
        "Learning Activities": "",
        "Assessment": "",
        "Date": ""
      }
    ]
  },
  {
    "Campus and Faculty": "FST, STA",
    "Department": "DCIT",
    "Course Code & title": "COMP 1604 Mathematics for Computing",
    "Semester and Level": "Semester 2  Level 1",
    "Pre-requisites": "None",
    "Co-requisites": "None",
    "Anti-requisites": "None",
    "Course Type": "Core",
    "Credits": "3",
    "Projected Enrolment": "",
    "Project Start Date": "",
    "Mode of Delivery": "Face-to-Face ☐     Blended ☑     Online ☐",
    "Course Description": "This course introduces students to the basic mathematical structures and computational techniques that are considered to be the foundation for courses in Computer Science and Information Technology. Students are also taught how to reason logically and how to solve problems using various proof techniques. The main mathematical structures covered are logic, sets, relations, functions and counting techniques.",
    "Rationale": "The material in this course is pervasive in many areas in computing such as data structures, algorithms, security, databases and programming languages. The ability to reason logically is important in order to write correct computer programs and students are also expected to create and understand proofs in courses such as data structures, algorithms, intelligent systems and information security.",
    "Course Aims": "This course has the following primary learning goals. These goals are developed in almost all the course topics.\r\nFamiliarity with the role logical reasoning plays in mathematics: Students should become aware of the basic principles of logical reasoning. They should come to understand the role of precise definitions for deciding whether a given object satisfies a given mathematical term, appreciate the importance of knowing both examples and non-examples of mathematical terms in order to explore statements about them, and know how to use definitions effectively in proofs. They should be familiar with the basic structures of direct proofs, indirect proofs, and proofs by mathematical induction and be able to apply them in a variety of situations. They should be able both to follow elementary mathematical arguments and to identify mistakes in them.\r\nExperience with mathematical exploration and conjecture: Students should experience the challenge and pleasure of exploring new concepts, looking for patterns, making conjectures, and trying to decide whether they are true or false.\r\nCommunication: Students should be able to discuss mathematical ideas coherently and express themselves clearly when giving a proof or counterexample.\r\nConnections with applications: Students should come to appreciate connections between mathematical concepts (such as those between general relations on sets and functions or between propositional logic and set properties) and between abstract mathematical ideas and concrete applications.",
    "Course Learning Outcomes": [
      "On successful completion of this course, students will be able to:",
      "Simplify and evaluate basic logic statements including compound statements, implications,\r\ninverses, converses, contrapositives and quantifiers using truth tables and the properties of logic",
      "Apply the concepts of standard mathematical logic to produce proofs or refutations of well-formed propositions or arguments, and to determine the validity of arguments",
      "Demonstrate the ability to write and evaluate a proof or outline the basic structure of and give\r\nexamples of each proof technique described.",
      "Explain the relationship between weak and strong induction and give examples of the appropriate use of each.",
      "Use and analyse recursive relations",
      "Explain the parallels between ideas of mathematical and/or structural induction to recursion and recursively defined structures.",
      "Formulate problems in the language of sets, functions & relations and perform the associated\r\noperations",
      "Use elementary number theory including the divisibility properties of numbers to determine\r\nprime numbers and composites, the greatest common divisor, and the least common multiple;\r\nperform modulo arithmetic and computer arithmetic.",
      "Solve counting problems by applying elementary counting techniques using the product and\r\nsum rules, permutations, combinations, the pigeon-hole principle, and binomial expansion.",
      "",
      "",
      "",
      "1. Propositional logic\r\n1.1. Logical connectives\r\n1.2. Truth tables\r\n1.3. Normal forms (conjunctive and disjunctive)\r\n1.4. Validity of well-formed formula\r\n1.5. Propositional inference rules (concepts of modus ponens and modus tollens) \r\n1.6. Notions of implication, equivalence, converse, inverse, contrapositive, negation, and contradiction\r\n1.7. Limitations of propositional logic \r\n2. Predicate logic\r\n2.1. Universal and existential quantification\r\n2.2. Limitations of predicate logic \r\n3. Basic Proof Techniques \r\n3.1.The structure of mathematical proofs\r\n3.2.Direct proofs\r\n3.3.Disproving by counterexample \r\n3.4.Proofs by contradiction and contraposition (i.e. Indirect Proofs)\r\n3.5.Proofs of Elementary Number Theory Results\r\n3.6. Results on Rational and Irrational Numbers \r\n4. Principles of Mathematical Induction and Recursive Definitions\r\n4.1. Weak and strong induction (i.e., First and Second Principle of Induction)\r\n4.2. Recursive mathematical definitions\r\n4.3. Sequences\r\n4.4. Structural induction \r\n5. Sets: Union,Intersection, complement, Cartesian product\r\n5.1. Power sets\r\n5.2. Cardinality of finite sets \r\n6. Relations and Modular Arithmetic\r\n6.1. Graphs\r\n6.2. Reflexivity, Symmetry, Transitivity, Equivalence relations \r\n6.3. Basic Modular Arithmetic\r\n6.4. Partial orders \r\n7. Functions: Surjections, Injections, Bijections, Inverses, Composition \r\n8. Counting\r\n8.1. Set cardinality and Counting\r\n8.2. Sum and Product rules\r\n8.3. Inclusion-Exclusion principle\r\n8.4. Pigeonhole principle\r\n8.5. Permutations and combinations\r\n8.6. Pascal’s identity\r\n8.7. Binomial theorem\r\n8.8. Recurrence Relations"
    ],
    "Course Content": "",
    "Teaching Methods": [
      {
        "Name": "Interactive Tutorials",
        "Description": "Live tutorial held once per weekly (for each tutorial group)"
      },
      {
        "Name": "",
        "Description": ""
      },
      {
        "Name": "",
        "Description": ""
      },
      {
        "Name": "",
        "Description": ""
      },
      {
        "Name": "",
        "Description": ""
      },
      {
        "Name": "",
        "Description": ""
      },
      {
        "Name": "",
        "Description": ""
      }
    ],
    "Contact and Credit hours": [
      {
        "Type": "",
        "Duration": "",
        "Contact Hours": "",
        "Credit Hours": ""
      },
      {
        "Type": "",
        "Duration": "",
        "Contact Hours": "",
        "Credit Hours": ""
      },
      {
        "Type": "",
        "Duration": "",
        "Contact Hours": "",
        "Credit Hours": ""
      }
    ],
    "Course Assessments Description": "",
    "Matrix": [
      {
        "Assessment": "Assignment 2",
        "Learning Outcomes": "1, 2, 3, 4, 5",
        "Assessment Description": "Short Answer and Problem Solving Exercises",
        "Weighting %": "3",
        "Duration": "10-14 days"
      },
      {
        "Assessment": "Assignment 3",
        "Learning Outcomes": "1, 2, 3, 4, 5, 6, 7, 8",
        "Assessment Description": "Short Answer and Problem Solving Exercises",
        "Weighting %": "4",
        "Duration": "10-14 days"
      },
      {
        "Assessment": "Coursework Exam 1",
        "Learning Outcomes": "None",
        "Assessment Description": "MCQ, Short Answer Questions and Problem Solving Exercises",
        "Weighting %": "20",
        "Duration": "60-90 minutes"
      },
      {
        "Assessment": "Coursework Exam 2",
        "Learning Outcomes": "1, 2, 3, 4, 5, 6, 7",
        "Assessment Description": "MCQ, Short Answer Questions and Problem Solving Exercises",
        "Weighting %": "20",
        "Duration": "60-90 minutes"
      },
      {
        "Assessment": "Final Exam",
        "Learning Outcomes": "1, 2, 3, 4, 5, 6, 7, 8, 9",
        "Assessment Description": "Short Answer and Problem Solving Exercises",
        "Weighting %": "50",
        "Duration": "2 hours"
      },
      {
        "Assessment": "",
        "Learning Outcomes": "",
        "Assessment Description": "",
        "Weighting %": "",
        "Duration": ""
      },
      {
        "Assessment": "",
        "Learning Outcomes": "",
        "Assessment Description": "",
        "Weighting %": "",
        "Duration": ""
      },
      {
        "Assessment": "",
        "Learning Outcomes": "",
        "Assessment Description": "",
        "Weighting %": "",
        "Duration": ""
      },
      {
        "Assessment": "",
        "Learning Outcomes": "",
        "Assessment Description": "",
        "Weighting %": "",
        "Duration": ""
      }
    ],
    "Learning Resources": [
      "",
      "",
      "Recommended"
    ],
    "Staffing Requirements": "",
    "Additional Cost": "",
    "Collaboration": "",
    "Course Coordinator": "",
    "Course Calendar": [
      {
        "Week": "2",
        "Topics": "Propositional Logic",
        "Required Readings": "Sec 2.2 - 2.4, Epp, Discrete Math 5e",
        "Learning Activities": "2 Lectures and 1 Tutorial",
        "Assessment": "Assignment 1 Given",
        "Date": "X"
      },
      {
        "Week": "3",
        "Topics": "Predicate Logic",
        "Required Readings": "Sec 3.1 - 3.2, Epp, Discrete Math 5e",
        "Learning Activities": "2 Lectures and 1 Tutorial",
        "Assessment": "Assignment 1 Due",
        "Date": "Week 2 - Week 3"
      },
      {
        "Week": "4",
        "Topics": "Predicate logic and Basic Proof Techniques",
        "Required Readings": "Sec 3.4, 4.1, 4.2 Epp, Discrete Math 5e",
        "Learning Activities": "2 Lectures and 1 Tutorial",
        "Assessment": "X",
        "Date": "X"
      },
      {
        "Week": "5",
        "Topics": "Basic Proof Techniques",
        "Required Readings": "Sec 4.3, 4.6, 4.7 Epp, Discrete Math 5e",
        "Learning Activities": "2 Lectures and 1 Tutorial",
        "Assessment": "Assignment 2 Given",
        "Date": "X"
      },
      {
        "Week": "6",
        "Topics": "Principles of Mathematical Induction",
        "Required Readings": "Sec 5.1 - 5.3, Epp, Discrete Math 5e",
        "Learning Activities": "2 Lectures and 1 Tutorial",
        "Assessment": "Assignment 2 Due",
        "Date": "Week 5 - Week 6"
      },
      {
        "Week": "7",
        "Topics": "Recursive Definitions, Sets",
        "Required Readings": "Sec 5.6, 5.7, 6.1, Epp, Discrete Math 5e",
        "Learning Activities": "2 Lectures and 1 Tutorial",
        "Assessment": "X",
        "Date": "X"
      },
      {
        "Week": "8",
        "Topics": "Sets, Relations",
        "Required Readings": "Sec 6.2, 6.3, 8.1  Epp, Discrete Math 5e",
        "Learning Activities": "2 Lectures and 1 Tutorial",
        "Assessment": "Coursework Exam 1",
        "Date": "Week 8"
      },
      {
        "Week": "9",
        "Topics": "Relations and Modular Arithmetic",
        "Required Readings": "Sec 8.1 - 8.4, Epp, Discrete Math 5e",
        "Learning Activities": "2 Lectures and 1 Tutorial",
        "Assessment": "Assignment 3 Given",
        "Date": "X"
      },
      {
        "Week": "10",
        "Topics": "Relations, Functions",
        "Required Readings": "Sec 7.1 - 7.3 Epp, Discrete Math 5e",
        "Learning Activities": "2 Lectures and 1 Tutorial",
        "Assessment": "Assignment 3 Due",
        "Date": "Week 9 - Week 10"
      },
      {
        "Week": "11",
        "Topics": "Counting",
        "Required Readings": "Sec 9.1 - 9.3  Epp, Discrete Math 5e",
        "Learning Activities": "2 Lectures and 1 Tutorial",
        "Assessment": "X",
        "Date": "X"
      },
      {
        "Week": "12",
        "Topics": "Counting",
        "Required Readings": "Sec 9.4, 9.5, 9.7 Epp, Discrete Math 5e",
        "Learning Activities": "2 Lectures and 1 Tutorial",
        "Assessment": "Coursework Exam 2 ",
        "Date": "Week 12"
      },
      {
        "Week": "13",
        "Topics": "Course Review\r\n (No introduction of new subject matter)",
        "Required Readings": " ",
        "Learning Activities": "2 Lectures and 1 Tutorial",
        "Assessment": "X",
        "Date": "X"
      },
      {
        "Week": "",
        "Topics": "",
        "Required Readings": "",
        "Learning Activities": "",
        "Assessment": "",
        "Date": ""
      }
    ]
  },
  {
    "Campus and Faculty": "FST, STA",
    "Department": "DCIT",
    "Course Code & title": "COMP 2603 Object-Oriented Programming I",
    "Semester and Level": "Semester 2  Level 2",
    "Pre-requisites": "COMP 1603",
    "Co-requisites": "",
    "Anti-requisites": "",
    "Course Type": "Core",
    "Credits": "3",
    "Projected Enrolment": "",
    "Project Start Date": "",
    "Mode of Delivery": "Face-to-Face ☐     Blended ☑     Online ☐",
    "Course Description": "This course provides a comprehensive introduction to the concepts and techniques of object oriented programming. Students will be taught fundamental object oriented constructs such as classes, methods and objects and core concepts such as encapsulation, abstraction, inheritance and composition. Students will learn how to develop user interfaces using an object oriented toolkit (e.g. Swing in Java) and the course gives a preliminary introduction to object oriented design. At the end of the course, students will be able to develop object oriented programs. The course will be delivered using a combination of face-to-face lectures and interactive hands-on computer lab sessions, along with eLearning activities using various online resources. Assessments will take the form of written examinations and individual programming assignments.",
    "Rationale": "An object oriented programming paradigm essentially aims to model real world artefacts in a manner that is modular, reusable and flexible. This course shows students how to break down large modelling problems into sub-problems and develop solutions that feature self contained, modular code.",
    "Course Aims": "COMP2603 aims to develop practical object oriented programming skills in undergraduate students while promoting an understanding of the theoretical concepts and design considerations behind these techniques. The course also aims to expose students to the development tools and programming APIs commonly used in the field.",
    "Course Learning Outcomes": [
      "On successful completion of this course, students will be able to:",
      "Describe the fundamental concepts and vocabulary of an object-oriented approach.",
      "Analyze a real-world situation in an object oriented way.",
      "Understand and interpret designs expressed in UML diagrams .",
      "Design object oriented solutions containing multiple classes and collaborations.",
      "Implement object oriented models using an appropriate programming language.",
      "Develop graphical user interfaces using objects within a programming framework.",
      "Generate event-driven code for making graphical user interfaces interactive and functional.",
      "Explain the impact of small design changes on object oriented program behaviour/outcomes.",
      "Apply basic object oriented techniques to real-world programming problems.",
      "Use appropriate collections for data storage and manipulation.",
      "",
      "",
      "1.Object-Oriented Programming\r\n1.1.Object-oriented design\r\n1.1.1.Decomposition into objects carrying state and having behaviour\r\n1.1.2.Class-hierarchy design for modelling\r\n1.2.Definition of classes: fields, methods, and constructors\r\n1.3.Subclasses, inheritance, and method overriding\r\n1.4.Dynamic dispatch: definition of method-call\r\n1.5.Subtyping (cross-reference PL/Type Systems)\r\n1.5.1.Subtype polymorphism; implicit upcasts in typed languages\r\n1.5.2.Notions of behavioural replacement:subtypes acting like supertypes\r\n1.5.3.Relationship between subtyping and inheritance\r\n1.6.Object-oriented idioms for encapsulation and information hiding\r\n1.6.1.Privacy and visibility of class members\r\n1.6.2.Interfaces revealing only method signatures\r\n1.6.3.Abstract base classes\r\n1.7.Using collection classes, iterators, and other common library components\r\n1.8.Overloading, overriding of methods, constructors\r\n1.9.Method types: accessors, mutators, static methods, instance methods\r\n2.Basic Type Systems\r\n2.1.Type safety and errors caused by using values inconsistently given their intended types\r\n2.2.Goals and limitations of static typing\r\n2.3.Generic types (parametric polymorphism)\r\n2.4.Complementary benefits of static and dynamic typing\r\n3.Algorithms and Design\r\n3.1.Fundamental design concepts and principles\r\n4.Fundamental Programming Concepts\r\n4.1.Basic syntax and semantics of a higher-level language\r\n4.2.Variables and primitive data types (e.g., numbers, characters, Booleans)\r\n4.3.Expressions and assignments\r\n4.4.Simple I/O including file I/O\r\n4.5.Conditional and iterative control structures\r\n4.6.Functions and parameter passing\r\n5.Fundamental Data Structures\r\n5.1.Arrays\r\n5.2.Strings and string processing\r\n5.3.Abstract data types and their APIs\r\n5.4.Strategies for choosing the appropriate abstract data structure\r\n6.Event-Driven and Reactive Programming\r\n6.1.Events and event handlers\r\n6.2.Separation of model, view, and controller\r\n7.SoftwareDesign\r\n7.1.System design principles: levels of abstraction (architectural design and detailed design), separation of concerns, information hiding, coupling and cohesion, re-use of standard structures\r\n7.2.Design Paradigms such as structured design (top-down functional decomposition), object-oriented design, event driven design, function oriented, service oriented\r\n8.Designing Interaction and HCI Foundations\r\n8.1.Elements of visual design (layout, color, fonts, labeling)\r\n8.2.Principles of good design and good designers; engineering tradeoffs\r\n9. Programming Interactive Systems\r\n9.1.Software Architecture Patterns, e.g.,Model-View controller; command objects, online, offline (cross\r\n9.2.Event management and user interaction\r\n9.3.Modern GUI libraries (e.g. JavaFX) GUIbuilders and UI programming environments"
    ],
    "Course Content": "",
    "Teaching Methods": [
      {
        "Name": "Online Activities (myElearning)",
        "Description": "Weekly activities: short quiz, design task/programming task/ forum posting task"
      },
      {
        "Name": "Flipped Classroom",
        "Description": "Early release of lecture content, lab exercises with extra activities for debate/discussion/exploration"
      },
      {
        "Name": "Inquiry-based Learning",
        "Description": "Interactive code writing/ demonstrations / problem solving during lab sessions"
      },
      {
        "Name": "Problem-based Learning",
        "Description": "Exercises/activities/tasks from lectures, labs and worksheets"
      },
      {
        "Name": "Directed Discussions",
        "Description": "Online and during lectures and lab sessions"
      },
      {
        "Name": "",
        "Description": ""
      },
      {
        "Name": "",
        "Description": ""
      }
    ],
    "Contact and Credit hours": [
      {
        "Type": "",
        "Duration": "",
        "Contact Hours": "",
        "Credit Hours": ""
      },
      {
        "Type": "",
        "Duration": "",
        "Contact Hours": "",
        "Credit Hours": ""
      },
      {
        "Type": "",
        "Duration": "",
        "Contact Hours": "",
        "Credit Hours": ""
      }
    ],
    "Course Assessments Description": "",
    "Matrix": [
      {
        "Assessment": "Assignment 2",
        "Learning Outcomes": "2,3,4,5",
        "Assessment Description": "Programming exercises",
        "Weighting %": "",
        "Duration": "2 weeks, released in Week 5, due in Week 7"
      },
      {
        "Assessment": "Assignment 3",
        "Learning Outcomes": "3,5,6,7,10",
        "Assessment Description": "Programming exercises",
        "Weighting %": "",
        "Duration": "2 weeks, released in Week 10, due in Week 12"
      },
      {
        "Assessment": "Coursework Exam 1",
        "Learning Outcomes": "",
        "Assessment Description": "Short answer theory questions, programming code exercises, problem-solving tasks, code analysis",
        "Weighting %": "15",
        "Duration": "1 hour, Held in Week 5"
      },
      {
        "Assessment": "Coursework Exam 2",
        "Learning Outcomes": "1,2,3,5,7,8,9,10",
        "Assessment Description": "Short answer theory questions, programming code exercises, problem-solving tasks, code analysis",
        "Weighting %": "15",
        "Duration": "1 hour, Held in Week 10"
      },
      {
        "Assessment": "Final Examination",
        "Learning Outcomes": "1,2,3,4,5,7,8,9,10",
        "Assessment Description": "Short answer theory questions, programming code exercises, problem-solving tasks, code analysis",
        "Weighting %": "50",
        "Duration": "2 hours, written"
      },
      {
        "Assessment": "",
        "Learning Outcomes": "",
        "Assessment Description": "",
        "Weighting %": "",
        "Duration": ""
      },
      {
        "Assessment": "",
        "Learning Outcomes": "",
        "Assessment Description": "",
        "Weighting %": "",
        "Duration": ""
      },
      {
        "Assessment": "",
        "Learning Outcomes": "",
        "Assessment Description": "",
        "Weighting %": "",
        "Duration": ""
      },
      {
        "Assessment": "",
        "Learning Outcomes": "",
        "Assessment Description": "",
        "Weighting %": "",
        "Duration": ""
      }
    ],
    "Learning Resources": [
      "",
      "",
      "Recommended"
    ],
    "Staffing Requirements": "",
    "Additional Cost": "",
    "Collaboration": "",
    "Course Coordinator": "",
    "Course Calendar": [
      {
        "Week": "2",
        "Topics": "Encapsulation, Information Hiding, Classes and Methods",
        "Required Readings": "",
        "Learning Activities": "Lectures, Labs",
        "Assessment": "\r\n",
        "Date": "\r\n"
      },
      {
        "Week": "3",
        "Topics": "Object Relationships and Equality",
        "Required Readings": "",
        "Learning Activities": "Lectures, Labs",
        "Assessment": "Assignment 1",
        "Date": "Due in Week 4"
      },
      {
        "Week": "4",
        "Topics": "Inheritance, Polymorphism",
        "Required Readings": "",
        "Learning Activities": "Lectures, Labs",
        "Assessment": "\r\n",
        "Date": "\r\n"
      },
      {
        "Week": "5",
        "Topics": "Polymorphism, Abstract Classes",
        "Required Readings": "",
        "Learning Activities": "Lectures, Labs",
        "Assessment": "CW Exam 1",
        "Date": "Week 5"
      },
      {
        "Week": "6",
        "Topics": "Interfaces and Abstractions",
        "Required Readings": "",
        "Learning Activities": "Lectures, Labs",
        "Assessment": "\r\n",
        "Date": "\r\n"
      },
      {
        "Week": "7",
        "Topics": "Graphical User Interfaces",
        "Required Readings": "",
        "Learning Activities": "Lectures, Labs",
        "Assessment": "Assignment 2",
        "Date": "Due in Week 7"
      },
      {
        "Week": "8",
        "Topics": "Event Driven Programming",
        "Required Readings": "",
        "Learning Activities": "Lectures, Labs",
        "Assessment": "\r\n",
        "Date": "\r\n"
      },
      {
        "Week": "9",
        "Topics": "Design Fundamentals",
        "Required Readings": "",
        "Learning Activities": "Lectures, Labs",
        "Assessment": "\r\n",
        "Date": "\r\n"
      },
      {
        "Week": "10",
        "Topics": "Container Classes",
        "Required Readings": "",
        "Learning Activities": "Lectures, Labs",
        "Assessment": "CW Exam 2",
        "Date": "Week 10"
      },
      {
        "Week": "11",
        "Topics": "Container Classes",
        "Required Readings": "",
        "Learning Activities": "Lectures, Labs",
        "Assessment": "\r\n",
        "Date": "\r\n"
      },
      {
        "Week": "12",
        "Topics": "Packages, Build Environments",
        "Required Readings": "",
        "Learning Activities": "Lectures, Labs",
        "Assessment": "Assignment 3",
        "Date": "Due in Week 12"
      },
      {
        "Week": "13",
        "Topics": "Course Review\r\n (No introduction of new subject matter)",
        "Required Readings": "",
        "Learning Activities": "Review",
        "Assessment": "\r\n",
        "Date": "\r\n"
      },
      {
        "Week": "",
        "Topics": "",
        "Required Readings": "",
        "Learning Activities": "",
        "Assessment": "",
        "Date": ""
      }
    ]
  },
  {
    "Campus and Faculty": "FST, STA",
    "Department": "DCIT",
    "Course Code & title": "COMP 3607 Object-Oriented Programming II",
    "Semester and Level": "Semester 2  Level 3",
    "Pre-requisites": "COMP 2603",
    "Co-requisites": "",
    "Anti-requisites": "",
    "Course Type": "Elective",
    "Credits": "3",
    "Projected Enrolment": "",
    "Project Start Date": "",
    "Mode of Delivery": "Face-to-Face ☐     Blended ☑     Online ☐",
    "Course Description": "This course looks at the main tools of modern object-oriented software development. These include design-support techniques and tools (principally design patterns), programming-support, debugging and testing tools (principally IDEs). The course has a strong emphasis on object-oriented design,  programming, refactoring and testings. Design pattern represents a best practice solution to a software problem in a specific context and the course examines the rationale and benefits of using patterns for such cases in relation to code smells and refactoring techniques. Numerous problems will be studied to investigate the implementation of good design, implementation and testing of object oriented programs and systems.",
    "Rationale": "Computer programmers and software engineers must be able to use a variety of programs and systems for designing solutions to common information technology issues.  The object-oriented programming paradigm has made it easier to handle software development involving complex tasks since it easily facilitates the decomposition of problems into modular entities. The course will allow students to practice advance concepts in object-oriented design. This course will help motivated students to be primary contributors to any small to mid-sized commercial or open-source software project.",
    "Course Aims": "COMP 3607 aims to elevate the practical object-oriented programming skills learned in COMP2603,Object-oriented Programming 1, in the context of production quality code projects and software systems. The course aims to expose students to best practices in modelling,  problem-solving, refactoring and testing using well-known tools and techniques.",
    "Course Learning Outcomes": [
      "On successful completion of this course, students will be able to:",
      "Analyze modelling problems using object-oriented design principles ",
      "Design object-oriented solutions using UML and software tools",
      "Discuss the principles of good object-oriented design",
      "Explain the reasoning for object-oriented design principles.",
      "Use design patterns to facilitate good object-oriented design and implementation",
      "Apply knowledge of design patterns to solve common programming problems",
      "Construct high level class diagrams in UML for object-oriented software solutions.",
      "Evaluate consequences of applying design patterns to  overall software quality of a system",
      "Refactor object-oriented programs according to design principles and best practices",
      "Test object-oriented programs with automated unit tests",
      "Manage object-oriented projects using distributed version control tools  ",
      "",
      "1.Algorithms and Design\r\n1.1 Fundamental design concepts and principles\r\n2.Basic Type Systems\r\n2.1 Type safety and errors caused by using values inconsistentlygiventheir intended types\r\n2.2 Goals and limitations of static typing\r\n2.3 Generic types (parametric polymorphism)\r\n3.Data Modeling\r\n3.1 Conceptual models (e.g., entity-relationship, UML diagrams)\r\n3.2 Object-oriented models(cross-reference PL/Object-Oriented Programming)\r\n3.3. Object Persistence using relational databases and other forms\r\n4.Development Methods\r\n4.1 Program comprehension\r\n4.2 Program correctness\r\n4.3 Simple refactoring\r\n4.4 Modern programming environments\r\n4.5 Debugging strategies\r\n4.6 Documentation and program style\r\n5.Introduction to Modeling and Simulation\r\n5.1 Models as abstractions of situations\r\n6.Object-Oriented Programming\r\n6.1 Object-oriented design\r\n6.2 Subclasses, inheritance, and method overriding\r\n6.3 Subtyping (cross-reference PL/Type Systems)\r\n7.Programming Interactive Systems\r\n7.1 Software Architecture Patterns, e.g.,Model-View controller; command objects, online, offline (cross reference PL/Event Drivenand Reactive Programming, where MVC is used in the context of event-driven programming)\r\n7.2 Modern GUI libraries (e.g. iOS, Android, JavaFX) GUIbuilders and UI programming environments (cross- reference PBD/Mobile Platforms)\r\n8.Requirements Engineering\r\n8.1 Describing functional requirements using, for example, use cases or users stories\r\n8.2 Unified Modelling Language (UML) - Class, Sequence and Use-Case Diagrams\r\n9.Software Construction\r\n9.1 Coding standards\r\n9.1 Model View Controller (MVC) architecture\r\n10.Software Design\r\n10.1 System design principles: levels of abstraction (architectural design and detailed design), separation of concerns, information hiding, coupling and cohesion, re-use of standard structures\r\n10.2 Design Paradigms such as structured design (top-down functional decomposition), object-oriented analysis and design, event driven design, component-level design, data-structured centered, aspect oriented, function oriented\r\n10.3 Structural and behavioral models of software designs\r\n10.4 Design patterns\r\n10.4.1. Strategy, Observer, Factory, Singleton, FlyWeight, Command, Adapter, Facade, Template Method, Iterator, Composite, State, Proxy and Mediator\r\n10.5 Refactoring designs using design patterns\r\n10.5.1 Code Smells\r\n10.6 Middleware: the object-oriented paradigm within middleware, object request brokers and marshalling,\r\n10.7 SOLID design principles\r\n11.Software Verification and Validation\r\n11.1 Test-driven development\r\n11.2 Object-oriented testing; systems testing\r\n11.3 Concepts of Code Refactoring and testing\r\n12.Tools and Environments\r\n12.1 Testing tools including static and dynamic analysis tools\r\n12.2 Programming environments that automate parts of program construction processes (e.g., automated builds)"
    ],
    "Course Content": "",
    "Teaching Methods": [
      {
        "Name": "Online Activities (myElearning)",
        "Description": "Weekly activities: short quiz, design task/programming task/ forum posting task"
      },
      {
        "Name": "Flipped Classroom",
        "Description": "Early release of lecture content, lab exercises with extra activities for debate/discussion/exploration"
      },
      {
        "Name": "Inquiry-based Learning",
        "Description": "Interactive code writing/ demonstrations / problem solving during lab sessions"
      },
      {
        "Name": "Problem-based Learning",
        "Description": "Exercises/activities/tasks from lectures, labs and worksheets"
      },
      {
        "Name": "Group work/ Collaborative ",
        "Description": "Project work, presentations, demonstration videos"
      },
      {
        "Name": "",
        "Description": ""
      },
      {
        "Name": "",
        "Description": ""
      }
    ],
    "Contact and Credit hours": [
      {
        "Type": "",
        "Duration": "",
        "Contact Hours": "",
        "Credit Hours": ""
      },
      {
        "Type": "",
        "Duration": "",
        "Contact Hours": "",
        "Credit Hours": ""
      },
      {
        "Type": "",
        "Duration": "",
        "Contact Hours": "",
        "Credit Hours": ""
      }
    ],
    "Course Assessments Description": "",
    "Matrix": [
      {
        "Assessment": "Assignment 2",
        "Learning Outcomes": "4,5,6,7",
        "Assessment Description": "Programming and/or UML design exercises using Design Patterns",
        "Weighting %": "10",
        "Duration": "2 weeks, released in Week 5, due in Week 7"
      },
      {
        "Assessment": "Coursework Exam 1",
        "Learning Outcomes": "1,2,3,4,9",
        "Assessment Description": "Short answer questions, programming code exercises, problem-solving tasks, code analysis",
        "Weighting %": "25",
        "Duration": "2 hours, Held in Week 5"
      },
      {
        "Assessment": "Coursework Exam 2",
        "Learning Outcomes": "",
        "Assessment Description": "Short answer questions, programming code exercises, problem-solving tasks, code analysis",
        "Weighting %": "25",
        "Duration": "2 hours, Held in Week 9"
      },
      {
        "Assessment": "Group project",
        "Learning Outcomes": "1,2,3,4,5,6,7,8,9,10,11",
        "Assessment Description": "Coding project, presentation, documentation, peer-review, code demonstration",
        "Weighting %": "30",
        "Duration": "Released in Week 3, code base due in Week 11, presentation due in Week 12"
      },
      {
        "Assessment": "",
        "Learning Outcomes": "",
        "Assessment Description": "",
        "Weighting %": "",
        "Duration": ""
      },
      {
        "Assessment": "",
        "Learning Outcomes": "",
        "Assessment Description": "",
        "Weighting %": "",
        "Duration": ""
      },
      {
        "Assessment": "",
        "Learning Outcomes": "",
        "Assessment Description": "",
        "Weighting %": "",
        "Duration": ""
      },
      {
        "Assessment": "",
        "Learning Outcomes": "",
        "Assessment Description": "",
        "Weighting %": "",
        "Duration": ""
      },
      {
        "Assessment": "",
        "Learning Outcomes": "",
        "Assessment Description": "",
        "Weighting %": "",
        "Duration": ""
      }
    ],
    "Learning Resources": [
      "Martin Fowler (2018). Refactoring: Improving the Design of Existing Code (2nd Edition), Addison-Wesley Professional; 2nd edition",
      "Craig Larman (2008). Applying UML and Patterns: An Introduction to Object-oriented Analysis and Design and Iterative Development, Dorling Kindersley Pvt Ltd",
      "Recommended"
    ],
    "Staffing Requirements": "",
    "Additional Cost": "",
    "Collaboration": "",
    "Course Coordinator": "",
    "Course Calendar": [
      {
        "Week": "2",
        "Topics": "UML - Class, Sequence and Use-Case Diagrams ",
        "Required Readings": "Larman: Chpt (parts) 1, 9, 10, 15, 16 ",
        "Learning Activities": "Lectures, Labs",
        "Assessment": "\r\n",
        "Date": "\r\n"
      },
      {
        "Week": "3",
        "Topics": "SOLID Design Principles",
        "Required Readings": "Resources on myElearning",
        "Learning Activities": "Lectures, Labs",
        "Assessment": "Project Group Formation",
        "Date": "Week 3"
      },
      {
        "Week": "4",
        "Topics": "SOLID Design Principles, Introduction to Refactoring",
        "Required Readings": "Resources on myElearning",
        "Learning Activities": "Lectures, Labs",
        "Assessment": "Assignment 1",
        "Date": "Due in Week 4"
      },
      {
        "Week": "5",
        "Topics": "Introduction to Design patterns, Singleton",
        "Required Readings": "Gamma: Chpt 1",
        "Learning Activities": "Lectures, Labs",
        "Assessment": "CW Exam 1",
        "Date": "Week 5"
      },
      {
        "Week": "6",
        "Topics": "Design Patterns - Composite, Command",
        "Required Readings": "Gamma: Chpt 4,5",
        "Learning Activities": "Lectures, Labs",
        "Assessment": "\r\n",
        "Date": "\r\n"
      },
      {
        "Week": "7",
        "Topics": "Design Patterns (Behavioural): Observer, Template",
        "Required Readings": "Gamma: Chpt 5",
        "Learning Activities": "Lectures, Labs",
        "Assessment": "Assignment 2",
        "Date": "Due in Week 7"
      },
      {
        "Week": "8",
        "Topics": " Refactoring, Code Smells, Strategy & Iterator Design Patterns",
        "Required Readings": "Gamma: Chpt 5; Fowler: Chpt 1",
        "Learning Activities": "Lectures, Labs",
        "Assessment": "\r\n",
        "Date": "\r\n"
      },
      {
        "Week": "9",
        "Topics": "Design Patterns - Adapter, Code Smells: Couplers;  Façade Pattern",
        "Required Readings": "Gamma: Chpt 4",
        "Learning Activities": "Lectures, Labs",
        "Assessment": "CW Exam 2",
        "Date": "Week 9"
      },
      {
        "Week": "10",
        "Topics": "Design Patterns - Mediator, State, Intro to Maven Projects",
        "Required Readings": "Gamma: Chpt 5; ",
        "Learning Activities": "Lectures, Labs",
        "Assessment": "",
        "Date": ""
      },
      {
        "Week": "11",
        "Topics": "Object Persistence, JPA, JDBC with MySQL",
        "Required Readings": "Resources on myElearning",
        "Learning Activities": "Lectures, Labs",
        "Assessment": "Project code",
        "Date": "Due in Week 11"
      },
      {
        "Week": "12",
        "Topics": "Project Week",
        "Required Readings": "Resources on myElearning",
        "Learning Activities": "Lectures, Labs",
        "Assessment": "Project presentations",
        "Date": "Due in Week 12"
      },
      {
        "Week": "13",
        "Topics": "Course Review\r\n (No introduction of new subject matter)",
        "Required Readings": "",
        "Learning Activities": "Review",
        "Assessment": "\r\n",
        "Date": "\r\n"
      },
      {
        "Week": "",
        "Topics": "",
        "Required Readings": "",
        "Learning Activities": "",
        "Assessment": "",
        "Date": ""
      }
    ]
  },
  {
    "Campus and Faculty": "FST, STA",
    "Department": "DCIT",
    "Course Code & title": "INFO 2603 Platform Technologies 1",
    "Semester and Level": "Semester 1  Level 2",
    "Pre-requisites": "INFO 1600 OR COMP 1600",
    "Co-requisites": "DONE",
    "Anti-requisites": "COMP 2601",
    "Course Type": "Core",
    "Credits": "3",
    "Projected Enrolment": "",
    "Project Start Date": "",
    "Mode of Delivery": "Face-to-Face ☐     Blended ☑     Online ☐",
    "Course Description": "This course provides the student with an introductory understanding of the terminology and concepts of operating systems, computer architecture, and computer networking. The technical foundation of operating systems’ installation, configuration, administration and troubleshooting are introduced to students. The course will be delivered using a combination of face-to-face lectures and interactive hands-on computer lab sessions, along with eLearning activities using various online resources.  There are 5 units in this course: Unit 1: Hardware and Computer Architecture, Unit 2: Operating System Concepts, Unit 3: Operating Systems in Practice, Unit 4: System Administration, Unit 5: Network Operating System Concepts. Assessments will take the form of written examinations, practical lab examinations and a group project. This course has 100% coursework and no final written exam.",
    "Rationale": "A computer platform generally refers to the operating system and computer hardware only.  Operating systems are central to all computing activities and act as intermediaries between computer users and a computer’s hardware and software. Computer platforms however conform to a set of standards that enable software developers to produce software applications for specific platforms. This course therefore bridges the knowledge gap between how computer platforms work with all other software systems and application code to produce a working environment for users. It merges theoretical content with practical, real-world application of computer platforms in business settings. It also prepares students for further courses on computer systems such as computer networks.",
    "Course Aims": "INFO 2603 aims to develop practical operating system administration, management and troubleshooting skills in undergraduate students while promoting an understanding of the theory behind these operations relevant to computer architecture and networking concepts. This addresses the need for students to be able to configure and manipulate basic computer systems for a variety of platforms with a clear understanding of the implications of these tasks for business setting",
    "Course Learning Outcomes": [
      "On successful completion of this course, students will be able to:",
      "Examine the basic hardware, computer architectures and machine organisations used by modern operating systems.",
      "Discuss operating system concepts, design objectives and principles using abstractions, layers and APIs",
      " Analyse flavours of operating systems and evaluate features that meet the needs of a business in different scenarios.",
      "Design an installation strategy for operating systems, the features and software to ensure the most economical use of hardware resources and time using a hypervisor. ",
      "Configure an operating system, its settings and features so that it can perform specific tasks for a user using virtual machines.",
      "Diagnose errors and problems with computers and the network to ensure the systems are available at all times.",
      "Perform administration of an operating system allowing ongoing user access to the required resources on a network.",
      "Utilise command line environments to manage file and directories, and perform administrative tasks in order to increase administrative performance.",
      "Analyse how hardware developments have led to changes in the priorities for the design and the management of file systems and data storage",
      "Conduct research necessary to successfully complete an assigned project on a cutting-edge topic area in Computer Science/Information Technology as applied to a business",
      "",
      "",
      "UNIT 1 - Hardware Review \r\n1.Assembly Level Machine Organization\r\n1.1 Basic organization of the von Neumann machine\r\n1.2 Shared memory multiprocessors/multicore organization\r\n1.3 Introduction to SIMD vs MIMD and the Flynn Taxonomy\r\n2. Resource Allocation and Scheduling\r\n2.1 Kinds of resources (e.g.,processor share, memory, disk, net bandwidth)\r\n3. DigitalLogic andDigitalSystems\r\n3.1. Overview and history of computer architecture\r\n3.2. Review of major computer organisation models: Von Neumann, Harvard.\r\n3.3. Modern Processor Architectures: RISC, CISC\r\n3.4. Instruction Set Architectures – x86, x86_64, IA64, ARM, SPARC.\r\n3.5. Computer System Components, I/O\r\n3.6. Bus Interconnection, width, pipelining.\r\n\r\nUNIT 2 - Operating Systems Concepts\r\n4.Overview of Operating Systems\r\n4.1 Role and purpose of the operating system\r\n4.2 Functionality of a typical operating system\r\n4.3 Mechanisms to support client-server models, hand-held devices\r\n4.4 Design issues (efficiency, robustness, flexibility, portability, security, compatibility)\r\n4.5 Categories of Operating Systems\r\n4.6 Operating System Managers\r\n4.7 Kernel vs User Mode\r\n\r\nUNIT 3 - Operating Systems Management\r\n5.Operating System Principles\r\n5.1 Abstractions, processes, and resources\r\n5.2. Process Management: Multithreading, Context Switching\r\n5.3. Scheduling, Race Condition\r\n5.4. Hardware-Software Interface, POSIX standard\r\n5.5. Concrete examples of Operating Systems: UNIX, Linux, Windows\r\n5.6. Design issues (efficiency, robustness, flexibility, portability, security, compatibility)\r\n6.File Systems\r\n6.1 Files: data, metadata, operations, organization, buffering, sequential, nonsequential\r\n6.2 Directories: contents and structure\r\n6.3 File systems: partitioning, mount/unmount, virtual file systems\r\n7.Memory Management\r\n7.1 Review of physical memory and memory management hardware\r\n7.2. Main memory organisation and operation\r\n7.3. Cache memories (address mapping, block size, replacement and store policy)\r\n8.Fault Tolerance\r\n8.1 Fundamental concepts: reliable and available systems (cross-reference SF/Reliability through Redundancy)\r\n9.Device Management\r\n9.1 Characteristics of serial and parallel devices\r\n10. AR/Interfacing and Communication\r\n10.1 I/O Fundamentals: handshaking, buffering, programmed I/O, interrupt-driven I/O\r\n10.2 Interrupt structures and acknowledgement\r\n10.3 External storage, physical organisation and drives\r\n10.4 Buses: bus protocols, arbitration, direct-memory access (DMA)\r\n10.5 Introduction to networks, multimedia support\r\n10.6 RAID architectures\r\n11.Reliability through Redundancy\r\n11.1 Redundancy throughcheck and retry\r\n11.2 Redundancy through redundant encoding (error correcting codes, CRC, FEC)\r\n11.3 Duplication/mirroring/replicas\r\n11.4 Other approaches to fault tolerance and availability\r\n\r\nUNIT 4 - VIRTUALISATION\r\n12.Virtual Machines\r\n12.1 Types of virtualization (includingHardware/Software, OS, Server, Service, Network)\r\n12.2 Paging and virtual memory\r\n12.3 Virtual file systems\r\n13.Virtualization and Isolation\r\n13.1 Levels of indirection, illustrated by virtual memory for managing physical memory resources\r\n13.2 Methods for implementing virtual memory and virtual machines\r\n\r\nUNIT 5 - DOMAIN-SPECIFIC ARCHITECTURES AND PLATFORMS\r\n14. Multiprocessing and Alternative Architectures\r\n14.1 Power Law\r\n14.2 SIMD and MIMD instruction sets and architectures\r\n14.3 Interconnection networks \r\n14.4 Shared multiprocessor memory systems and memory consistency\r\n15 AR/Performance Enhancements\r\n15.1 Superscalar architecture\r\n15.2 Vector processors and GPUs\r\n15.3 Alternative architectures, special-purpose processors: personal, warehouse, neural, machine learning architectures"
    ],
    "Course Content": "",
    "Teaching Methods": [
      {
        "Name": "Online Activities (myElearning)",
        "Description": "Forum activities, Quizzes, Polls"
      },
      {
        "Name": "Laboratory Work",
        "Description": "Short-answer questions, research questions, practical IT activities"
      },
      {
        "Name": "Flipped Classroom",
        "Description": "Video Tutorials, Reading Assignments, Worksheets"
      },
      {
        "Name": "Inquiry-based Learning",
        "Description": "Online lab activities, virtual labs, demonstrations, discussions"
      },
      {
        "Name": "Problem-based Learning",
        "Description": "Exercises, troubleshooting/configuration activities"
      },
      {
        "Name": "Groupwork",
        "Description": "Project, written research article, team video, animation, peer-review activities"
      },
      {
        "Name": "",
        "Description": ""
      }
    ],
    "Contact and Credit hours": [
      {
        "Type": "",
        "Duration": "",
        "Contact Hours": "",
        "Credit Hours": ""
      },
      {
        "Type": "",
        "Duration": "",
        "Contact Hours": "",
        "Credit Hours": ""
      },
      {
        "Type": "",
        "Duration": "",
        "Contact Hours": "",
        "Credit Hours": ""
      }
    ],
    "Course Assessments Description": "",
    "Matrix": [
      {
        "Assessment": "Assignment 2",
        "Learning Outcomes": "4,5,6,7",
        "Assessment Description": " Troubleshooting, Problem Solving Tasks",
        "Weighting %": "8",
        "Duration": "2 weeks, released in Week 5, due in Week 7"
      },
      {
        "Assessment": "Course work Exam 1",
        "Learning Outcomes": "1,2,3,4",
        "Assessment Description": "Scenario-based Problems & Practical Exercises",
        "Weighting %": "25",
        "Duration": "2 hours, Held in Week 5"
      },
      {
        "Assessment": "Course work Exam 2",
        "Learning Outcomes": "DONE",
        "Assessment Description": "Scenario-based Problems & Practical Exercises",
        "Weighting %": "25",
        "Duration": "2 hours, Held in Week 9"
      },
      {
        "Assessment": "Project",
        "Learning Outcomes": "1,2,3,9,10",
        "Assessment Description": "Research Article, Demo, Presentation",
        "Weighting %": "35",
        "Duration": "Released in Week 3,  Demo video and article due in Week 11, presentation due in Week 12"
      },
      {
        "Assessment": "",
        "Learning Outcomes": "",
        "Assessment Description": "",
        "Weighting %": "",
        "Duration": ""
      },
      {
        "Assessment": "",
        "Learning Outcomes": "",
        "Assessment Description": "",
        "Weighting %": "",
        "Duration": ""
      },
      {
        "Assessment": "",
        "Learning Outcomes": "",
        "Assessment Description": "",
        "Weighting %": "",
        "Duration": ""
      },
      {
        "Assessment": "",
        "Learning Outcomes": "",
        "Assessment Description": "",
        "Weighting %": "",
        "Duration": ""
      },
      {
        "Assessment": "",
        "Learning Outcomes": "",
        "Assessment Description": "",
        "Weighting %": "",
        "Duration": ""
      }
    ],
    "Learning Resources": [
      "",
      "",
      "Recommended"
    ],
    "Staffing Requirements": "",
    "Additional Cost": "",
    "Collaboration": "",
    "Course Coordinator": "",
    "Course Calendar": [
      {
        "Week": "2",
        "Topics": "Units 1-2",
        "Required Readings": "\"Chapters 2,3,4,7,8 (McHoe & Flynn)\r\nChapters 4, 7,10,11 (Ledin)\"",
        "Learning Activities": "Lectures, Labs, Worksheets",
        "Assessment": "Assignment 1 Released",
        "Date": "x"
      },
      {
        "Week": "3",
        "Topics": "Unit 3",
        "Required Readings": "\"Chapters 13, 15 (McHoe & Flynn)\r\nChapters 4, 7 (Ledin)\"",
        "Learning Activities": "Lectures, Labs, Worksheets",
        "Assessment": "Project Description Released",
        "Date": "x"
      },
      {
        "Week": "4",
        "Topics": "Unit 3",
        "Required Readings": "\"Chapters 13, 15 (McHoe & Flynn)\r\nChapters 5, 8 (Ledin)\"",
        "Learning Activities": "Lectures, Labs, Worksheets",
        "Assessment": "x",
        "Date": "Assignment 1 Due"
      },
      {
        "Week": "5",
        "Topics": "Revision /Unit 4",
        "Required Readings": "See Weeks 1-5",
        "Learning Activities": "Review Lecture, Written Exam",
        "Assessment": "Coursework Exam 1",
        "Date": "Week 5"
      },
      {
        "Week": "6",
        "Topics": "Unit 4",
        "Required Readings": "\"Chapters 13, 15 (McHoe & Flynn)\r\nChapters 6,12  (Ledin)\"",
        "Learning Activities": "Lectures, Labs, Worksheets",
        "Assessment": "x",
        "Date": "x"
      },
      {
        "Week": "7",
        "Topics": "Unit 4",
        "Required Readings": "\"Chapter 12, (Ledin)\r\nChapter 14 \r\n(McHoe & Flynn)\"",
        "Learning Activities": "Lectures, Labs, Worksheets",
        "Assessment": "x",
        "Date": "Assignment 2 Due"
      },
      {
        "Week": "8",
        "Topics": "Unit 4",
        "Required Readings": "Chapters 14 (McHoe & Flynn)",
        "Learning Activities": "Lectures, Labs, Worksheets",
        "Assessment": "x",
        "Date": "x"
      },
      {
        "Week": "9",
        "Topics": "Revision /Unit 5",
        "Required Readings": "See Weeks 1-9",
        "Learning Activities": "Review Lecture, Written Exam",
        "Assessment": "Coursework Exam 2",
        "Date": "Week 9"
      },
      {
        "Week": "10",
        "Topics": "Unit 5",
        "Required Readings": "\"Chapter 9 (McHoe & Flynn) \r\nChapters 13, 14 (Ledin)\"",
        "Learning Activities": "Lectures, Labs, Worksheets",
        "Assessment": "x",
        "Date": "x"
      },
      {
        "Week": "11",
        "Topics": "Unit 5",
        "Required Readings": "\"Chapter 9 (McHoe & Flynn) \r\nChapters 13, 14 (Ledin)\"",
        "Learning Activities": "Lectures, Labs, Worksheets",
        "Assessment": "x",
        "Date": "x"
      },
      {
        "Week": "12",
        "Topics": "Course Review (No introduction of new subject matter) / Project Presentations",
        "Required Readings": "See resource section on myElearning course page",
        "Learning Activities": "Presentation, Demo, Article",
        "Assessment": "Group Presentation",
        "Date": "Week 12"
      },
      {
        "Week": "",
        "Topics": "",
        "Required Readings": "",
        "Learning Activities": "",
        "Assessment": "",
        "Date": ""
      },
      {
        "Week": "",
        "Topics": "",
        "Required Readings": "",
        "Learning Activities": "",
        "Assessment": "",
        "Date": ""
      }
    ]
  },
  {
    "Campus and Faculty": "FST, STA",
    "Department": "DCIT",
    "Course Code & title": "INFO 3602 Web Programming and Technologies II",
    "Semester and Level": "Semester 2  Level 3",
    "Pre-requisites": "INFO 2602",
    "Co-requisites": "",
    "Anti-requisites": "",
    "Course Type": "Core",
    "Credits": "3",
    "Projected Enrolment": "",
    "Project Start Date": "",
    "Mode of Delivery": "Face-to-Face ☐     Blended ☑     Online ☐",
    "Course Description": "This course focuses on the development of web services and the evaluation and utilization of software tools to provide solutions to common business problems within the market place. Students are exposed to technologies involved in the development of web services and using industry relevant tools for designing, developing and managing web systems. The course will be delivered using a combination of interactive lectures, eLearning, case studies and online resources. Assignments will take the form of lab examinations, group projects and presentations.",
    "Rationale": "This course provides students with the tools and techniques needed to operate effectively within the ICT and wider industry. The course provides an environment to develop practical skills and techniques used in the development and maintenance of web systems within enterprise environments.",
    "Course Aims": "INFO3602 aims to develop practical web programming skills in undergraduate students while promoting an understanding of the theoretical concepts and design considerations behind these systems. The course also aims to expose students to the development tools and programming APIs commonly used in the field.",
    "Course Learning Outcomes": [
      "On successful completion of this course, students will be able to:",
      "Install OS-level, native web server and database on a local development environment",
      "Write programs using a contemporary, server-side programming language",
      "Manage the execution and administration of server-side programs and sites ",
      "Customise themes and templates for dynamic sites hosted on a Content Management System",
      "Control front-end features (appearance, menus, content, navigation) from back-end files",
      "Construct custom queries to display and control front-end content",
      "Import/export site files, database, config files across development environments",
      "Apply permissions, restrictions and authentication for users based on roles",
      "Define web service endpoints for headless queries of CMS sites.",
      "Deploy sites from local to production/live servers on the web using automated workflows",
      "Manage web projects and documentation using distributed version control tools   ",
      "",
      "1.Web Platforms\r\n1.1 Web programming languages (e.g., HTML5, Java Script, PHP, CSS) \r\n1.2 Web platform constraints \r\n1.3 Software as a Service (SaaS)\r\n1.4 Web standards\r\n2. Platform Based Developemnt\r\n2.1 Programming via platform-specific APIs\r\n2.2 Content Management System (CMS) software \r\n3. Information Management Concepts\r\n3.1 Information systems as socio-technical systems\r\n3.2 Information capture and representation\r\n3.3 Declarative and navigational queries, use of links\r\n3.4 Supporting human needs: searching, retrieving, linking, browsing, navigating\r\n3.5 Analysis and indexing\r\n4.Database Systems\r\n4.1 Use of a declarative query language\r\n5.Information Storage and Retrieval\r\n5.1 Faceted search (e.g., using citations, keywords, classification schemes)\r\n5.2 Naming,repositories, archives\r\n6.Data, Information and Knowledge\r\n6.1 Content management models, frameworks, systems, design methods\r\n6.2 Digital representations of content including numbers, text, images (e.g., raster and vector), video (e.g.,QuickTime, MPEG2, MPEG4), audio (e.g., written score, MIDI, sampled digitized sound track) and animations; complex/composite/aggregate objects; FRB\r\n6.3 Content structure / management,\r\n6.4 Evaluate the requirements for data retention and processing for an application.\r\n7.Programming Interactive Systems\r\n7.1 Choosing interaction styles and interaction techniques\r\n8.Data, Information and Knowledge\r\n8.1 Widget classes and libraries\r\n8.2 Data-driven applications (database-backed web pages)\r\n8.3 Design for resource-constrained devices (e.g. small, mobile devices)\r\n9.Web Security\r\n9.1 Session management, authentication\r\n9.1 Server-side security tools, plugins\r\n10. Privacy and Civil Liberties\r\n10.1 Privacy implications of widespread data collection for transactional databases, data warehouses,\r\n10.2 Technology-based solutions for privacy protection (cross-reference IAS/Threats and Attacks/attacks on\r\n10.3 Assess the quality, accuracy, and timeliness of data or meta-data and its utility for creating information."
    ],
    "Course Content": "",
    "Teaching Methods": [
      {
        "Name": "Online Activities (myElearning)",
        "Description": "Forum activities, Quizzes, Wiki, Surveys, Polls"
      },
      {
        "Name": "Problem-based Learning",
        "Description": "Practical lab sessions and activities tied to teaching content"
      },
      {
        "Name": "Flipped Classroom",
        "Description": "Video Tutorials, Reading Assignments, Worksheets"
      },
      {
        "Name": "Collaborative Learning",
        "Description": "Groupwork, collaborative activities, "
      },
      {
        "Name": "",
        "Description": ""
      },
      {
        "Name": "",
        "Description": ""
      },
      {
        "Name": "",
        "Description": ""
      }
    ],
    "Contact and Credit hours": [
      {
        "Type": "",
        "Duration": "",
        "Contact Hours": "",
        "Credit Hours": ""
      },
      {
        "Type": "",
        "Duration": "",
        "Contact Hours": "",
        "Credit Hours": ""
      },
      {
        "Type": "",
        "Duration": "",
        "Contact Hours": "",
        "Credit Hours": ""
      }
    ],
    "Course Assessments Description": "",
    "Matrix": [
      {
        "Assessment": "Assignment 2",
        "Learning Outcomes": "2,3,6",
        "Assessment Description": "Programming problems/Theory Questions (CMS Queries)",
        "Weighting %": "5",
        "Duration": "10-14 days"
      },
      {
        "Assessment": "Coursework Examination 1",
        "Learning Outcomes": "2,3,4,5,7",
        "Assessment Description": "Practical CMS Tasks, Configuration, Customisation, Troubleshooting",
        "Weighting %": "25",
        "Duration": "120-150 minutes"
      },
      {
        "Assessment": "Coursework Examination 2",
        "Learning Outcomes": "",
        "Assessment Description": "Practical CMS Tasks, Configuration, Customisation, Troubleshooting",
        "Weighting %": "25",
        "Duration": "120-150 minutes"
      },
      {
        "Assessment": "Group Project",
        "Learning Outcomes": "1,2,3,4,5,6,7,8,9,10,11",
        "Assessment Description": "Website Design, Coded Solution, Live Deployment, Presentation (10 mins), Online documentation (max 5 pages), Peer Reviews, Group size: 3 members",
        "Weighting %": "40",
        "Duration": "Released in Week 3, Due in Week 12"
      },
      {
        "Assessment": "",
        "Learning Outcomes": "",
        "Assessment Description": "",
        "Weighting %": "",
        "Duration": ""
      },
      {
        "Assessment": "",
        "Learning Outcomes": "",
        "Assessment Description": "",
        "Weighting %": "",
        "Duration": ""
      },
      {
        "Assessment": "",
        "Learning Outcomes": "",
        "Assessment Description": "",
        "Weighting %": "",
        "Duration": ""
      },
      {
        "Assessment": "",
        "Learning Outcomes": "",
        "Assessment Description": "",
        "Weighting %": "",
        "Duration": ""
      },
      {
        "Assessment": "",
        "Learning Outcomes": "",
        "Assessment Description": "",
        "Weighting %": "",
        "Duration": ""
      }
    ],
    "Learning Resources": [
      "",
      "",
      "Recommended"
    ],
    "Staffing Requirements": "",
    "Additional Cost": "",
    "Collaboration": "",
    "Course Coordinator": "",
    "Course Calendar": [
      {
        "Week": "2",
        "Topics": "Content Management Systems - WordPress",
        "Required Readings": "Lecture notes, resources on myElearning",
        "Learning Activities": "Lecture, Lab",
        "Assessment": "",
        "Date": ""
      },
      {
        "Week": "3",
        "Topics": "Installing and Configuring Themes, Pages, Blogs",
        "Required Readings": "Lecture notes, resources on myElearning",
        "Learning Activities": "Lecture, Lab",
        "Assessment": "Group Project released",
        "Date": ""
      },
      {
        "Week": "4",
        "Topics": "Dynamic Naviagation, Content Hierarchies and Types",
        "Required Readings": "Lecture notes, resources on myElearning",
        "Learning Activities": "Lecture, Lab",
        "Assessment": "Assignment 1 Due",
        "Date": "Week 4"
      },
      {
        "Week": "5",
        "Topics": "Responsive websites, Blog Content, Archives",
        "Required Readings": "Lecture notes, resources on myElearning",
        "Learning Activities": "Lecture, Lab",
        "Assessment": "",
        "Date": ""
      },
      {
        "Week": "6",
        "Topics": "Custom Post Types, Relationships, Queries",
        "Required Readings": "Lecture notes, resources on myElearning",
        "Learning Activities": "Lecture",
        "Assessment": "Coursework Examination 1",
        "Date": "Week 6"
      },
      {
        "Week": "7",
        "Topics": "Custom Post Types, Relationships, Queries",
        "Required Readings": "Lecture notes, resources on myElearning",
        "Learning Activities": "Lecture, Lab",
        "Assessment": "",
        "Date": ""
      },
      {
        "Week": "8",
        "Topics": "User Management Plugins, Roles, Permissions",
        "Required Readings": "Lecture notes, resources on myElearning",
        "Learning Activities": "Lecture, Lab",
        "Assessment": "Assignment 2 Due",
        "Date": "Week 8"
      },
      {
        "Week": "9",
        "Topics": "WordPress REST API",
        "Required Readings": "Lecture notes, resources on myElearning",
        "Learning Activities": "Lecture, Lab",
        "Assessment": "",
        "Date": ""
      },
      {
        "Week": "10",
        "Topics": "Backup, Restoring and Going Live",
        "Required Readings": "Lecture notes, resources on myElearning",
        "Learning Activities": "",
        "Assessment": "Coursework Examination 2",
        "Date": "Week 10"
      },
      {
        "Week": "11",
        "Topics": "Live Search, User Generated Content",
        "Required Readings": "Lecture notes, resources on myElearning",
        "Learning Activities": "Lecture, Lab",
        "Assessment": "",
        "Date": ""
      },
      {
        "Week": "12",
        "Topics": "General Data Protection, Data Management Policies",
        "Required Readings": "Lecture notes, resources on myElearning",
        "Learning Activities": "Lecture, Lab",
        "Assessment": "",
        "Date": "Week 12"
      },
      {
        "Week": "13",
        "Topics": "Project Presentations (no new content matter)",
        "Required Readings": "Lecture notes, resources on myElearning",
        "Learning Activities": "Presentations",
        "Assessment": "Group Presentations ",
        "Date": "Week 13"
      },
      {
        "Week": "",
        "Topics": "",
        "Required Readings": "",
        "Learning Activities": "",
        "Assessment": "",
        "Date": ""
      }
    ]
  },
  {
    "Campus and Faculty": "FST, STA",
    "Department": "DCIT",
    "Course Code & title": "INFO 3608  E-Commerce",
    "Semester and Level": "Semester 2  Level 3",
    "Pre-requisites": "INFO 2600 OR COMP 2606",
    "Co-requisites": "",
    "Anti-requisites": "",
    "Course Type": "Elective",
    "Credits": "3",
    "Projected Enrolment": "",
    "Project Start Date": "",
    "Mode of Delivery": "Face-to-Face ☐     Blended ☑     Online ☐",
    "Course Description": "The course E-Commerce provides comprehensive coverage of topics from E-Commerce strategy, business models types and categories. It examines the various eCommerce payment systems and surrounding security issues. The course also covers E-commerce technology infrastructure, business concepts, marketing/revenue models, social issues and real world experiences. It explorers the tools and application that goes to creating a E-Commerce solutions. ",
    "Rationale": "Firms and institutions of all types and sizes are revaluating their strategies and transforming their mode of operations. Recent global challenges and local pressures have created a need for all organisations to adopt and implement an e-commerce solution that would reap the benefits from the tools / techniques available by the current and progressive technologies. The course challenges participants to explore the realities and implications of e-commerce in a contemporary global business environment. The non-adoption of an e-commerce solution has proven to be the detriment to most, if not all, businesses. E-commerce has therefore been an essential component in all business strategy and operations.  ",
    "Course Aims": "This course aims to examines the strategies, models and principles of e-commerce. Critical surrounding factors and issues are explored and applied into the process of the design, development, recommendation and implementation of an e-commerce solution.",
    "Course Learning Outcomes": [
      "On successful completion of this course, students will be able to:",
      "Differentiate between e-commerce and e-business,  technological building blocks and major current themes in e-commerce.",
      "Describe major B2C and B2B business models, concepts and applicable strategies.",
      "Articulate how the Web, Internet, web features and services support e-commerce.",
      "Explain the process that should be followed in building an e-commerce presence.",
      "Identify the key security threats in the e-commerce environment.",
      "Discuss major e-commerce payment systems in use today.",
      "Identify basic digital commerce marketing and advertising strategies and tools.",
      "Contrast traditional online marketing and the new social-mobile-local marketing platforms in terms of key features and the relationships between social, mobile, and local marketing.",
      "Examine basic concepts related to privacy and information rights, the practices of e-commerce companies that threaten privacy, and the different methods that can be used to protect online privacy.",
      "Describe the major features of the online service sector and business models of on-demand service companies.",
      "Interpret major trends in the consumption of media and online content, the major revenue models for digital content delivery, digital rights management, and the concept of media convergence.",
      "Analyse how procurement and supply chains relate to B2B e-commerce.",
      "Course Topics:\r\n1. Introduction to E-commerce\r\n1.1.The Difference between E-commerce and E-business\r\n1.2.Unique Features of E-commerce Technology\r\n1.3.Types of E-commerce\r\n1.4.E-commerce: A Brief History\r\n1.5.Understanding E-commerce: Organizing Themes\r\n1.6.Academic Disciplines Concerned with E-commerce\r\n2.E-commerce Business Models and Concepts\r\n2.1.E-commerce Business Models\r\n2.2.Major Business-to-Consumer (B2C) Business Models\r\n2.3.Major Business-to-Business (B2B) Business Models\r\n2.4.E-commerce Changes Business: Strategy, Structure, and Process\r\n3.E-commerce Infrastructure: The Internet, Web, and Mobile Platform\r\n3.1.Internet Backbone, Internet Exchange Points, Tier 3 ISP\r\n3.2.The Internet and the Web: Features and Services\r\n3.3.Platforms for Mobile Application Development\r\n3.4.E-commerce Changes Business: Strategy, Structure, and Process\r\n4.Building an E-commerce Presence: Websites, Mobile Sites, and Apps\r\n4.1.Building an E-commerce Presence: A Systematic Approach\r\n4.2.Determination of Software\r\n4.3.Determination of Hardware\r\n4.4.E-Commerce Site Tools\r\n4.5.Developing a Mobile Website and Building Mobile Applications\r\n5.E-commerce Security and Payment Systems\r\n5.1.Security Threats in the E-commerce Environment\r\n5.2.Technology Solutions\r\n5.3.Management Policies, Business Procedures, and Public Laws\r\n5.4.A Security Plan: Management Policies\r\n5.5.E-commerce Payment Systems\r\n5.6.Electronic Billing Presentment and Payment\r\n6.E-commerce Marketing and Advertising Concepts\r\n6.1.Digital Commerce Marketing and Advertising Strategies and Tools\r\n6.2.Internet Marketing Technologies\r\n6.3.Understanding the Costs and Benefits of Online Marketing Communications\r\n7.Social, Mobile, and Local Marketing\r\n7.1.Social Marketing\r\n7.2.Mobile Marketing\r\n7.3.Local and Location-Based Mobile Marketing\r\n8.Ethical, Social, and Political Issues in E-commerce\r\n8.1.Ethical, Social, and Political Issues in E-commerce\r\n8.2.Privacy and Information Rights\r\n8.3.Intellectual Property Rights\r\n8.4.Governance\r\n8.5.Net Neutrality\r\n8.6.Antitrust, Monopoly, and Market Competition in the Internet Era\r\n8.7.Public Safety and Welfare\r\n9.Online Retail and Services\r\n9.1.Analyzing the Viability of Online Firms\r\n9.2.E-commerce in Action: E-tailing Business Models\r\n9.3.The Service Sector: Offline and Online\r\n9.4.Online Financial Services\r\n9.5.Online Travel Services\r\n9.6.Online Career Services\r\n10.Online Content and Media\r\n10.1.Content Market: Entertainment and Media Industry Revenues\r\n10.2.Online Content: Consumption, Revenue Models, and Revenue\r\n10.3.The Online Publishing Industry\r\n10.4.The Online Entertainment Industry\r\n11.Social Networks, Auctions, and Portals\r\n11.1.Social Networks and Online Communities\r\n11.2.Online Auctions\r\n11.3.E-commerce Portals\r\n11.4.The Growth and Evolution of Portals\r\n11.5.Types of Portals: General-Purpose and Vertical Market\r\n11.6.Portal Business Models\r\n12.B2B E-commerce: Supply Chain Management and Collaborative Commerce\r\n12.1.An Overview of B2B E-commerce\r\n12.2.The Procurement Process and Supply Chains\r\n12.3.Trends in Supply Chain Management and Collaborative Commerce\r\n12.4.Net Marketplaces: The Selling Side of B2B\r\n12.5.Private Industrial Networks"
    ],
    "Course Content": "",
    "Teaching Methods": [
      {
        "Name": "Online Activities (myElearning)",
        "Description": "Online quizzes are provided to assess their knowledge of covered topics."
      },
      {
        "Name": "Laboratory Work",
        "Description": "Hands-on demonstration on the installation and configuration of an eCommerce solution is conducted. \r\nEach session explores the incorporation of a feature or functionality that can be considered in their recommnetation/solution."
      },
      {
        "Name": "Flipped Classroom",
        "Description": "Students are occasionally asked to demonstrate to other studentshow certain features are installed and configured for used in the development of their own projects."
      },
      {
        "Name": "Inquiry-based Learning",
        "Description": "This is performed by via \"Analysis of Problem and Proposed Solutions\" assignment (see details below)"
      },
      {
        "Name": "Problem-based Learning",
        "Description": "Global and local cases are presented in online lectures and relevant solutions are discussed."
      },
      {
        "Name": "Groupwork",
        "Description": "Students are grouped to work on the design, development and implementation of an e-commerce. This should be properly documented and reported along with a presentation."
      },
      {
        "Name": "",
        "Description": ""
      }
    ],
    "Contact and Credit hours": [
      {
        "Type": "",
        "Duration": "",
        "Contact Hours": "",
        "Credit Hours": ""
      },
      {
        "Type": "",
        "Duration": "",
        "Contact Hours": "",
        "Credit Hours": ""
      },
      {
        "Type": "",
        "Duration": "",
        "Contact Hours": "",
        "Credit Hours": ""
      }
    ],
    "Course Assessments Description": "",
    "Matrix": [
      {
        "Assessment": "Assessment 2: 10% Quiz",
        "Learning Outcomes": "7,8,9,10,11,12",
        "Assessment Description": "Twenty (20) MCQ, 10 Short Answers, 1hr, 11th week, synchronous",
        "Weighting %": "10",
        "Duration": "1 hour"
      },
      {
        "Assessment": "Assessment 3: 30% Group Project",
        "Learning Outcomes": "1,2,3,4,5,6,7,8,9,10,11,12",
        "Assessment Description": "Design, Develop, Deploy, Document, Present E-Commerce Solution/System. Given in 2nd Week, Due on 12th Week, Group size = 4-5",
        "Weighting %": "30",
        "Duration": "11 week project"
      },
      {
        "Assessment": "Assessment 4: 20% Applied Research Paper of Specified list of ECommerce Topics (Individual)",
        "Learning Outcomes": "",
        "Assessment Description": "Given in 2nd Week, Due on 4th Week. Individual research of local business and implemenation of eCommerce solution based on topics discussed in lectures, 5 typed pages equivalent to 2250 words,Based on font: arial, font size: 12, single spaced (http://wordstopages.com)",
        "Weighting %": "20",
        "Duration": "2 week"
      },
      {
        "Assessment": "Assessment 5: 30% Case Based Analysis (4 Essay Type Questions - on Analysis of Problem and Proposed Solutions)",
        "Learning Outcomes": "1,2,3,4,5,6,7,8,9,10,11,12",
        "Assessment Description": "Four (4) Essay Type Questions - on Analysis of Problem and Proposed Solutions) (Individual) (Given 5th Week, Due on 9th Week. Answers to each question should be 1 page equivalent to 450 words single spaced, therefore total is 4 typed pages equivalent to 1800 words. Based on font: arial, font size: 12, single spaced (http://wordstopages.com)",
        "Weighting %": "30",
        "Duration": "5 week"
      },
      {
        "Assessment": "",
        "Learning Outcomes": "",
        "Assessment Description": "",
        "Weighting %": "",
        "Duration": ""
      },
      {
        "Assessment": "",
        "Learning Outcomes": "",
        "Assessment Description": "",
        "Weighting %": "",
        "Duration": ""
      },
      {
        "Assessment": "",
        "Learning Outcomes": "",
        "Assessment Description": "",
        "Weighting %": "",
        "Duration": ""
      },
      {
        "Assessment": "",
        "Learning Outcomes": "",
        "Assessment Description": "",
        "Weighting %": "",
        "Duration": ""
      },
      {
        "Assessment": "",
        "Learning Outcomes": "",
        "Assessment Description": "",
        "Weighting %": "",
        "Duration": ""
      }
    ],
    "Learning Resources": [
      "",
      "",
      ""
    ],
    "Staffing Requirements": "",
    "Additional Cost": "",
    "Collaboration": "",
    "Course Coordinator": "",
    "Course Calendar": [
      {
        "Week": "Week",
        "Topics": "Topic",
        "Required Readings": "Required Readings/\r\n Learning Resources",
        "Learning Activities": "Learning \r\nActivities",
        "Assessment": "Assessment",
        "Date": "Assessment\r\n Date"
      },
      {
        "Week": "1",
        "Topics": "1. Introduction to E-commerce",
        "Required Readings": "E-commerce 2019: business. technology. society. 15th Edition, Chapter 1",
        "Learning Activities": "",
        "Assessment": "",
        "Date": ""
      },
      {
        "Week": "2",
        "Topics": "2. E-commerce Business Models and Concepts",
        "Required Readings": "E-commerce 2019: business. technology. society. 15th Edition, Chapter 2",
        "Learning Activities": "",
        "Assessment": "(Design, Develop, Deploy, Document, Present E-Commerce Solution/System) Given in 2nd Week, Due on 12th Week, Group size = 4-5\r\n\r\n(Given in 2nd Week, Due on 4th Week) (Individual research of local business and implemenation of eCommerce solution based on topics discussed in lectures, 5 typed pages equivalent to 2250 words,Based on font: arial, font size: 12, single spaced (http://wordstopages.com)",
        "Date": ""
      },
      {
        "Week": "3",
        "Topics": "3.E-commerce Infrastructure: The Internet, Web, and Mobile Platform",
        "Required Readings": "E-commerce 2019: business. technology. society. 15th Edition, Chapter 3",
        "Learning Activities": "",
        "Assessment": "",
        "Date": ""
      },
      {
        "Week": "4",
        "Topics": "4. Building an E-commerce Presence: Websites, Mobile Sites, and Apps",
        "Required Readings": "E-commerce 2019: business. technology. society. 15th Edition, Chapter 4",
        "Learning Activities": "",
        "Assessment": "(20 MCQ, 10 Short Answers, 1hr, 4th week) synchronous\r\n\r\nIndividual research of local business and implemenation of eCommerce solution based on topics discussed in lectures - DUE",
        "Date": ""
      },
      {
        "Week": "5",
        "Topics": "5.E-commerce Security and Payment Systems",
        "Required Readings": "E-commerce 2019: business. technology. society. 15th Edition, Chapter 5",
        "Learning Activities": "",
        "Assessment": "(4 Essay Type Questions - on Analysis of Problem and Proposed Solutions) (Individual) (Given 5th Week, Due on 9th Week). Answers to each question should be 1 page equivalent to 450 words single spaced, therefore total is 4 typed pages equivalent to 1800 words. Based on font: arial, font size: 12, single spaced (http://wordstopages.com)",
        "Date": ""
      },
      {
        "Week": "6",
        "Topics": "6.E-commerce Marketing and Advertising Concepts",
        "Required Readings": "E-commerce 2019: business. technology. society. 15th Edition, Chapter 6",
        "Learning Activities": "",
        "Assessment": "",
        "Date": ""
      },
      {
        "Week": "7",
        "Topics": "7.Social, Mobile, and Local Marketing",
        "Required Readings": "E-commerce 2019: business. technology. society. 15th Edition, Chapter 7",
        "Learning Activities": "",
        "Assessment": "",
        "Date": ""
      },
      {
        "Week": "8",
        "Topics": "8. Ethical, Social, and Political Issues in E-commerce",
        "Required Readings": "E-commerce 2019: business. technology. society. 15th Edition, Chapter 8",
        "Learning Activities": "",
        "Assessment": "",
        "Date": ""
      },
      {
        "Week": "9",
        "Topics": "9.Online Retail and Services",
        "Required Readings": "E-commerce 2019: business. technology. society. 15th Edition, Chapter 9",
        "Learning Activities": "",
        "Assessment": "Essay Type Questions - DUE",
        "Date": ""
      },
      {
        "Week": "10",
        "Topics": "10.Online Content and Media",
        "Required Readings": "E-commerce 2019: business. technology. society. 15th Edition, Chapter 10",
        "Learning Activities": "",
        "Assessment": "",
        "Date": ""
      },
      {
        "Week": "11",
        "Topics": "11.Social Networks, Auctions, and Portals",
        "Required Readings": "E-commerce 2019: business. technology. society. 15th Edition, Chapter 11",
        "Learning Activities": "",
        "Assessment": "(20 MCQ, 10 Short Answers, 1hr, 11th week) synchronous",
        "Date": ""
      },
      {
        "Week": "12",
        "Topics": "12.B2B E-commerce: Supply Chain Management and Collaborative Commerce",
        "Required Readings": "E-commerce 2019: business. technology. society. 15th Edition, Chapter 12",
        "Learning Activities": "",
        "Assessment": "Design, Develop, Deploy, Document, Present E-Commerce Solution/System - DUE",
        "Date": ""
      }
    ]
  }
]